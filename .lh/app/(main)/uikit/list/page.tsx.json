{
    "sourceFile": "app/(main)/uikit/list/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1706140766810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706148330326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n import { Dropdown, DropdownChangeEvent } from 'primereact/dropdown';\n import { Rating } from 'primereact/rating';\n import { PickList } from 'primereact/picklist';\n import { OrderList } from 'primereact/orderlist';\n-//import { ProductService } from '../../../../demo/service/ProductService';\n+//OLDD import { ProductService } from '../../../../demo/service/ProductService';\n import { InputText } from 'primereact/inputtext';\n import type { Demo } from '@/types';\n \n const ListDemo = () => {\n"
                },
                {
                    "date": 1706148371738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,35 @@\n     ];\n \n     useEffect(() => {\n        // ProductService.getProducts().then((data) => setDataViewValue(data));\n+       const myProdutos = [{\n+        \"id\": \"1000\",\n+        \"code\": \"f230fh0g3\",\n+        \"name\": \"PrimeBlocks\",\n+        \"description\": \"Product Description\",\n+        \"image\": \"headphones.jpg\",\n+        \"price\": 65,\n+        \"date\": \"09/13/2022\",\n+        \"category\": \"Fone\",\n+        \"quantity\": 24,\n+        \"inventoryStatus\": \"INSTOCK\",\n+        \"rating\": 5\n+    },\n+    {\n+        \"id\": \"1001\",\n+        \"code\": \"nvklal433\",\n+        \"name\": \"Logo\",\n+        \"description\": \"Product Description\",\n+        \"image\": \"gaming-set.jpg\",\n+        \"price\": 72,\n+        \"date\": \"09/12/2022\",\n+        \"category\": \"Game\",\n+        \"quantity\": 61,\n+        \"inventoryStatus\": \"OUTOFSTOCK\",\n+        \"rating\": 4\n+    }];\n+    setDataViewValue(myProdutos);\n         setGlobalFilterValue('');\n     }, []);\n \n     useEffect(() => {\n"
                },
                {
                    "date": 1706148388547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n     const dataviewListItem = (data: Demo.Product) => {\n         return (\n             <div className=\"col-12\">\n                 <div className=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\n-                    <img src={`/demo/images/product/${data.image}`} alt={data.name} className=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\" />\n+                    <img src={`/product/${data.image}`} alt={data.name} className=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\" />\n                     <div className=\"flex-1 flex flex-column align-items-center text-center md:text-left\">\n                         <div className=\"font-bold text-2xl\">{data.name}</div>\n                         <div className=\"mb-2\">{data.description}</div>\n                         <Rating value={data.rating} readOnly cancel={false} className=\"mb-2\"></Rating>\n"
                },
                {
                    "date": 1706148396398,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n                         </div>\n                         <span className={`product-badge status-${data.inventoryStatus?.toLowerCase()}`}>{data.inventoryStatus}</span>\n                     </div>\n                     <div className=\"flex flex-column align-items-center text-center mb-3\">\n-                        <img src={`/demo/images/product/${data.image}`} alt={data.name} className=\"w-9 shadow-2 my-3 mx-0\" />\n+                        <img src={`/product/${data.image}`} alt={data.name} className=\"w-9 shadow-2 my-3 mx-0\" />\n                         <div className=\"text-2xl font-bold\">{data.name}</div>\n                         <div className=\"mb-3\">{data.description}</div>\n                         <Rating value={data.rating} readOnly cancel={false} />\n                     </div>\n"
                }
            ],
            "date": 1706140766810,
            "name": "Commit-0",
            "content": "'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { DataView, DataViewLayoutOptions } from 'primereact/dataview';\nimport { Button } from 'primereact/button';\nimport { Dropdown, DropdownChangeEvent } from 'primereact/dropdown';\nimport { Rating } from 'primereact/rating';\nimport { PickList } from 'primereact/picklist';\nimport { OrderList } from 'primereact/orderlist';\n//import { ProductService } from '../../../../demo/service/ProductService';\nimport { InputText } from 'primereact/inputtext';\nimport type { Demo } from '@/types';\n\nconst ListDemo = () => {\n    const listValue = [\n        { name: 'San Francisco', code: 'SF' },\n        { name: 'London', code: 'LDN' },\n        { name: 'Paris', code: 'PRS' },\n        { name: 'Istanbul', code: 'IST' },\n        { name: 'Berlin', code: 'BRL' },\n        { name: 'Barcelona', code: 'BRC' },\n        { name: 'Rome', code: 'RM' }\n    ];\n\n    const [picklistSourceValue, setPicklistSourceValue] = useState(listValue);\n    const [picklistTargetValue, setPicklistTargetValue] = useState([]);\n    const [orderlistValue, setOrderlistValue] = useState(listValue);\n    const [dataViewValue, setDataViewValue] = useState<Demo.Product[]>([]);\n    const [globalFilterValue, setGlobalFilterValue] = useState('');\n    const [filteredValue, setFilteredValue] = useState<Demo.Product[] | null>(null);\n    const [layout, setLayout] = useState<'grid' | 'list' | (string & Record<string, unknown>)>('grid');\n    const [sortKey, setSortKey] = useState(null);\n    const [sortOrder, setSortOrder] = useState<0 | 1 | -1 | null>(null);\n    const [sortField, setSortField] = useState('');\n\n    const sortOptions = [\n        { label: 'Price High to Low', value: '!price' },\n        { label: 'Price Low to High', value: 'price' }\n    ];\n\n    useEffect(() => {\n       // ProductService.getProducts().then((data) => setDataViewValue(data));\n        setGlobalFilterValue('');\n    }, []);\n\n    useEffect(() => {\n       // ProductService.getProducts().then((data) => setDataViewValue(data));\n        setGlobalFilterValue('');\n    }, []);\n\n    const onFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        setGlobalFilterValue(value);\n        if (value.length === 0) {\n            setFilteredValue(null);\n        } else {\n            const filtered = dataViewValue?.filter((product) => {\n                const productNameLowercase = product.name.toLowerCase();\n                const searchValueLowercase = value.toLowerCase();\n                return productNameLowercase.includes(searchValueLowercase);\n            });\n\n            setFilteredValue(filtered);\n        }\n    };\n\n    const onSortChange = (event: DropdownChangeEvent) => {\n        const value = event.value;\n\n        if (value.indexOf('!') === 0) {\n            setSortOrder(-1);\n            setSortField(value.substring(1, value.length));\n            setSortKey(value);\n        } else {\n            setSortOrder(1);\n            setSortField(value);\n            setSortKey(value);\n        }\n    };\n\n    const dataViewHeader = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between gap-2\">\n            <Dropdown value={sortKey} options={sortOptions} optionLabel=\"label\" placeholder=\"Sort By Price\" onChange={onSortChange} />\n            <span className=\"p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText value={globalFilterValue} onChange={onFilter} placeholder=\"Search by Name\" />\n            </span>\n            <DataViewLayoutOptions layout={layout} onChange={(e) => setLayout(e.value)} />\n        </div>\n    );\n\n    const dataviewListItem = (data: Demo.Product) => {\n        return (\n            <div className=\"col-12\">\n                <div className=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\n                    <img src={`/demo/images/product/${data.image}`} alt={data.name} className=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\" />\n                    <div className=\"flex-1 flex flex-column align-items-center text-center md:text-left\">\n                        <div className=\"font-bold text-2xl\">{data.name}</div>\n                        <div className=\"mb-2\">{data.description}</div>\n                        <Rating value={data.rating} readOnly cancel={false} className=\"mb-2\"></Rating>\n                        <div className=\"flex align-items-center\">\n                            <i className=\"pi pi-tag mr-2\"></i>\n                            <span className=\"font-semibold\">{data.category}</span>\n                        </div>\n                    </div>\n                    <div className=\"flex flex-row md:flex-column justify-content-between w-full md:w-auto align-items-center md:align-items-end mt-5 md:mt-0\">\n                        <span className=\"text-2xl font-semibold mb-2 align-self-center md:align-self-end\">${data.price}</span>\n                        <Button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'} size=\"small\" className=\"mb-2\"></Button>\n                        <span className={`product-badge status-${data.inventoryStatus?.toLowerCase()}`}>{data.inventoryStatus}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const dataviewGridItem = (data: Demo.Product) => {\n        return (\n            <div className=\"col-12 lg:col-4\">\n                <div className=\"card m-3 border-1 surface-border\">\n                    <div className=\"flex flex-wrap gap-2 align-items-center justify-content-between mb-2\">\n                        <div className=\"flex align-items-center\">\n                            <i className=\"pi pi-tag mr-2\" />\n                            <span className=\"font-semibold\">{data.category}</span>\n                        </div>\n                        <span className={`product-badge status-${data.inventoryStatus?.toLowerCase()}`}>{data.inventoryStatus}</span>\n                    </div>\n                    <div className=\"flex flex-column align-items-center text-center mb-3\">\n                        <img src={`/demo/images/product/${data.image}`} alt={data.name} className=\"w-9 shadow-2 my-3 mx-0\" />\n                        <div className=\"text-2xl font-bold\">{data.name}</div>\n                        <div className=\"mb-3\">{data.description}</div>\n                        <Rating value={data.rating} readOnly cancel={false} />\n                    </div>\n                    <div className=\"flex align-items-center justify-content-between\">\n                        <span className=\"text-2xl font-semibold\">${data.price}</span>\n                        <Button icon=\"pi pi-shopping-cart\" disabled={data.inventoryStatus === 'OUTOFSTOCK'} />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const itemTemplate = (data: Demo.Product, layout: 'grid' | 'list' | (string & Record<string, unknown>)) => {\n        if (!data) {\n            return;\n        }\n\n        if (layout === 'list') {\n            return dataviewListItem(data);\n        } else if (layout === 'grid') {\n            return dataviewGridItem(data);\n        }\n    };\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>DataView</h5>\n                    <DataView value={filteredValue || dataViewValue} layout={layout} paginator rows={9} sortOrder={sortOrder} sortField={sortField} itemTemplate={itemTemplate} header={dataViewHeader}></DataView>\n                </div>\n            </div>\n\n            <div className=\"col-12 xl:col-8\">\n                <div className=\"card\">\n                    <h5>PickList</h5>\n                    <PickList\n                        source={picklistSourceValue}\n                        target={picklistTargetValue}\n                        sourceHeader=\"From\"\n                        targetHeader=\"To\"\n                        itemTemplate={(item) => <div>{item.name}</div>}\n                        onChange={(e) => {\n                            setPicklistSourceValue(e.source);\n                            setPicklistTargetValue(e.target);\n                        }}\n                        sourceStyle={{ height: '200px' }}\n                        targetStyle={{ height: '200px' }}\n                    ></PickList>\n                </div>\n            </div>\n\n            <div className=\"col-12 xl:col-4\">\n                <div className=\"card\">\n                    <h5>OrderList</h5>\n                    <OrderList value={orderlistValue} listStyle={{ height: '200px' }} className=\"p-orderlist-responsive\" header=\"Cities\" itemTemplate={(item) => <div>{item.name}</div>} onChange={(e) => setOrderlistValue(e.value)}></OrderList>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ListDemo;\n"
        }
    ]
}