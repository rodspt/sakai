{
    "sourceFile": "app/(main)/uikit/input/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1706140512586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706140539888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,10 +102,12 @@\n         { name: \"Option 2\", code: \"O2\" },\n         { name: \"Option 3\", code: \"O3\" },\n     ];\n \n+    useEffect(() => {\n+        //CountryService.getCountries().then((data) => setAutoValue(data));\n+    }, []);\n \n-\n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n             if (!event.query.trim().length) {\n                 setAutoFilteredValue([...autoValue]);\n"
                },
                {
                    "date": 1706140559006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n import { SelectButton } from \"primereact/selectbutton\";\n import { Slider } from \"primereact/slider\";\n import { ToggleButton } from \"primereact/togglebutton\";\n import { useEffect, useState } from \"react\";\n+//import { CountryService } from \"../../../../demo/service/CountryService\";\n \n interface InputValue {\n     name: string;\n     code: string;\n@@ -103,9 +104,9 @@\n         { name: \"Option 3\", code: \"O3\" },\n     ];\n \n     useEffect(() => {\n-        //CountryService.getCountries().then((data) => setAutoValue(data));\n+        CountryService.getCountries().then((data) => setAutoValue(data));\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n"
                },
                {
                    "date": 1706140564250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n         { name: \"Option 3\", code: \"O3\" },\n     ];\n \n     useEffect(() => {\n-        CountryService.getCountries().then((data) => setAutoValue(data));\n+       // CountryService.getCountries().then((data) => setAutoValue(data));\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n"
                },
                {
                    "date": 1706145704738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n import { SelectButton } from \"primereact/selectbutton\";\n import { Slider } from \"primereact/slider\";\n import { ToggleButton } from \"primereact/togglebutton\";\n import { useEffect, useState } from \"react\";\n-//import { CountryService } from \"../../../../demo/service/CountryService\";\n+//OLDD import { CountryService } from \"../../../../demo/service/CountryService\";\n \n interface InputValue {\n     name: string;\n     code: string;\n"
                },
                {
                    "date": 1706145720318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n         { name: \"Option 3\", code: \"O3\" },\n     ];\n \n     useEffect(() => {\n-       // CountryService.getCountries().then((data) => setAutoValue(data));\n+       //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n"
                },
                {
                    "date": 1706145780279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,8 +105,36 @@\n     ];\n \n     useEffect(() => {\n        //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n+           //NEW\n+           const myCountry = [{\n+            \"id\": \"1000\",\n+            \"code\": \"f230fh0g3\",\n+            \"name\": \"PrimeBlocks\",\n+            \"description\": \"Product Description\",\n+            \"image\": \"headphones.jpg\",\n+            \"price\": 65,\n+            \"date\": \"09/13/2022\",\n+            \"category\": \"Fone\",\n+            \"quantity\": 24,\n+            \"inventoryStatus\": \"INSTOCK\",\n+            \"rating\": 5\n+        },\n+        {\n+            \"id\": \"1001\",\n+            \"code\": \"nvklal433\",\n+            \"name\": \"Logo\",\n+            \"description\": \"Product Description\",\n+            \"image\": \"gaming-set.jpg\",\n+            \"price\": 72,\n+            \"date\": \"09/12/2022\",\n+            \"category\": \"Game\",\n+            \"quantity\": 61,\n+            \"inventoryStatus\": \"OUTOFSTOCK\",\n+            \"rating\": 4\n+        }];\n+        setAutoValue(myCountrys as any);\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n"
                },
                {
                    "date": 1706145804807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,33 +106,39 @@\n \n     useEffect(() => {\n        //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n            //NEW\n-           const myCountry = [{\n-            \"id\": \"1000\",\n-            \"code\": \"f230fh0g3\",\n-            \"name\": \"PrimeBlocks\",\n-            \"description\": \"Product Description\",\n-            \"image\": \"headphones.jpg\",\n-            \"price\": 65,\n-            \"date\": \"09/13/2022\",\n-            \"category\": \"Fone\",\n-            \"quantity\": 24,\n-            \"inventoryStatus\": \"INSTOCK\",\n-            \"rating\": 5\n+           const myCountrys = [ {\n+            \"id\": 1000,\n+            \"name\": \"James Butt\",\n+            \"country\": {\n+                \"name\": \"Algeria\",\n+                \"code\": \"dz\"\n+            },\n+            \"company\": \"Benton, John B Jr\",\n+            \"date\": \"2015-09-13\",\n+            \"status\": \"unqualified\",\n+            \"activity\": 17,\n+            \"representative\": {\n+                \"name\": \"Ioni Bowcher\",\n+                \"image\": \"ionibowcher.png\"\n+            }\n         },\n         {\n-            \"id\": \"1001\",\n-            \"code\": \"nvklal433\",\n-            \"name\": \"Logo\",\n-            \"description\": \"Product Description\",\n-            \"image\": \"gaming-set.jpg\",\n-            \"price\": 72,\n-            \"date\": \"09/12/2022\",\n-            \"category\": \"Game\",\n-            \"quantity\": 61,\n-            \"inventoryStatus\": \"OUTOFSTOCK\",\n-            \"rating\": 4\n+            \"id\": 1001,\n+            \"name\": \"Josephine Darakjy\",\n+            \"country\": {\n+                \"name\": \"Egypt\",\n+                \"code\": \"eg\"\n+            },\n+            \"company\": \"Chanay, Jeffrey A Esq\",\n+            \"date\": \"2019-02-09\",\n+            \"status\": \"proposal\",\n+            \"activity\": 0,\n+            \"representative\": {\n+                \"name\": \"Amy Elsner\",\n+                \"image\": \"amyelsner.png\"\n+            }\n         }];\n         setAutoValue(myCountrys as any);\n     }, []);\n \n"
                },
                {
                    "date": 1706145858393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n                 \"name\": \"Amy Elsner\",\n                 \"image\": \"amyelsner.png\"\n             }\n         }];\n-        setAutoValue(myCountrys as any);\n+        setAutoValue(myCountrys);\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n"
                },
                {
                    "date": 1706145888821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n \n     useEffect(() => {\n        //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n            //NEW\n-           const myCountrys = [ {\n+           const myCountrys: Demo.Country[] = [ {\n             \"id\": 1000,\n             \"name\": \"James Butt\",\n             \"country\": {\n                 \"name\": \"Algeria\",\n"
                },
                {
                    "date": 1706146014983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,40 +106,14 @@\n \n     useEffect(() => {\n        //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n            //NEW\n-           const myCountrys: Demo.Country[] = [ {\n-            \"id\": 1000,\n-            \"name\": \"James Butt\",\n-            \"country\": {\n-                \"name\": \"Algeria\",\n-                \"code\": \"dz\"\n-            },\n-            \"company\": \"Benton, John B Jr\",\n-            \"date\": \"2015-09-13\",\n-            \"status\": \"unqualified\",\n-            \"activity\": 17,\n-            \"representative\": {\n-                \"name\": \"Ioni Bowcher\",\n-                \"image\": \"ionibowcher.png\"\n-            }\n-        },\n-        {\n-            \"id\": 1001,\n-            \"name\": \"Josephine Darakjy\",\n-            \"country\": {\n-                \"name\": \"Egypt\",\n-                \"code\": \"eg\"\n-            },\n-            \"company\": \"Chanay, Jeffrey A Esq\",\n-            \"date\": \"2019-02-09\",\n-            \"status\": \"proposal\",\n-            \"activity\": 0,\n-            \"representative\": {\n-                \"name\": \"Amy Elsner\",\n-                \"image\": \"amyelsner.png\"\n-            }\n-        }];\n+           const myCountrys: Demo.Country[] = [\n+            {\"name\": \"Brazil\", \"code\": \"BR\"},\n+            {\"name\": \"British Indian Ocean Territory\", \"code\": \"IO\"},\n+            {\"name\": \"Brunei Darussalam\", \"code\": \"BN\"},\n+            {\"name\": \"Bulgaria\", \"code\": \"BG\"}\n+        ];\n         setAutoValue(myCountrys);\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n"
                },
                {
                    "date": 1706146130153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,12 +107,11 @@\n     useEffect(() => {\n        //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n            //NEW\n            const myCountrys: Demo.Country[] = [\n-            {\"name\": \"Brazil\", \"code\": \"BR\"},\n-            {\"name\": \"British Indian Ocean Territory\", \"code\": \"IO\"},\n-            {\"name\": \"Brunei Darussalam\", \"code\": \"BN\"},\n-            {\"name\": \"Bulgaria\", \"code\": \"BG\"}\n+            {name: 'Afghanistan', code: 'AF'},\n+            {name: 'Albania', code: 'AL'},\n+            {name: 'Algeria', code: 'DZ'}\n         ];\n         setAutoValue(myCountrys);\n     }, []);\n \n"
                },
                {
                    "date": 1706146216732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n         return (\n             <div className=\"flex align-items-center\">\n                 <img\n                     alt={option.name}\n-                    src={`/demo/images/flag/flag_placeholder.png`}\n+                    src={`/flag/flag_placeholder.png`}\n                     onError={(e) =>\n                         (e.currentTarget.src =\n                             \"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\")\n                     }\n"
                },
                {
                    "date": 1706146293288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,14 +106,22 @@\n \n     useEffect(() => {\n        //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n            //NEW\n-           const myCountrys: Demo.Country[] = [\n-            {name: 'Afghanistan', code: 'AF'},\n-            {name: 'Albania', code: 'AL'},\n-            {name: 'Algeria', code: 'DZ'}\n+           const myCountries: Demo.Country[] = [\n+            { name: \"Australia\", code: \"AU\" },\n+            { name: \"Brazil\", code: \"BR\" },\n+            { name: \"China\", code: \"CN\" },\n+            { name: \"Egypt\", code: \"EG\" },\n+            { name: \"France\", code: \"FR\" },\n+            { name: \"Germany\", code: \"DE\" },\n+            { name: \"India\", code: \"IN\" },\n+            { name: \"Japan\", code: \"JP\" },\n+            { name: \"Spain\", code: \"ES\" },\n+            { name: \"United States\", code: \"US\" },\n         ];\n-        setAutoValue(myCountrys);\n+\n+        setAutoValue(myCountries);\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n"
                },
                {
                    "date": 1706146317098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,26 +103,9 @@\n         { name: \"Option 2\", code: \"O2\" },\n         { name: \"Option 3\", code: \"O3\" },\n     ];\n \n-    useEffect(() => {\n-       //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n-           //NEW\n-           const myCountries: Demo.Country[] = [\n-            { name: \"Australia\", code: \"AU\" },\n-            { name: \"Brazil\", code: \"BR\" },\n-            { name: \"China\", code: \"CN\" },\n-            { name: \"Egypt\", code: \"EG\" },\n-            { name: \"France\", code: \"FR\" },\n-            { name: \"Germany\", code: \"DE\" },\n-            { name: \"India\", code: \"IN\" },\n-            { name: \"Japan\", code: \"JP\" },\n-            { name: \"Spain\", code: \"ES\" },\n-            { name: \"United States\", code: \"US\" },\n-        ];\n \n-        setAutoValue(myCountries);\n-    }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n             if (!event.query.trim().length) {\n"
                },
                {
                    "date": 1706146325851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,10 +103,26 @@\n         { name: \"Option 2\", code: \"O2\" },\n         { name: \"Option 3\", code: \"O3\" },\n     ];\n \n+    useEffect(() => {\n+       //OLDD CountryService.getCountries().then((data) => setAutoValue(data));\n+           //NEW\n+           const myCountries: Demo.Country[] = [\n+            { name: \"Australia\", code: \"AU\" },\n+            { name: \"Brazil\", code: \"BR\" },\n+            { name: \"China\", code: \"CN\" },\n+            { name: \"Egypt\", code: \"EG\" },\n+            { name: \"France\", code: \"FR\" },\n+            { name: \"Germany\", code: \"DE\" },\n+            { name: \"India\", code: \"IN\" },\n+            { name: \"Japan\", code: \"JP\" },\n+            { name: \"Spain\", code: \"ES\" },\n+            { name: \"United States\", code: \"US\" },\n+        ];\n+        setAutoValue(myCountries);\n+    }, []);\n \n-\n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         setTimeout(() => {\n             if (!event.query.trim().length) {\n                 setAutoFilteredValue([...autoValue]);\n"
                }
            ],
            "date": 1706140512586,
            "name": "Commit-0",
            "content": "\"use client\";\nimport type { Demo, Page } from \"@/types\";\nimport {\n    AutoComplete,\n    AutoCompleteCompleteEvent,\n} from \"primereact/autocomplete\";\nimport { Button } from \"primereact/button\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Checkbox, CheckboxChangeEvent } from \"primereact/checkbox\";\nimport { Chips } from \"primereact/chips\";\nimport {\n    ColorPicker,\n    ColorPickerHSBType,\n    ColorPickerRGBType,\n} from \"primereact/colorpicker\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { InputSwitch } from \"primereact/inputswitch\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { Knob } from \"primereact/knob\";\nimport { ListBox } from \"primereact/listbox\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { RadioButton } from \"primereact/radiobutton\";\nimport { Rating } from \"primereact/rating\";\nimport { SelectButton } from \"primereact/selectbutton\";\nimport { Slider } from \"primereact/slider\";\nimport { ToggleButton } from \"primereact/togglebutton\";\nimport { useEffect, useState } from \"react\";\n\ninterface InputValue {\n    name: string;\n    code: string;\n}\n\nconst InputDemo: Page = () => {\n    const [floatValue, setFloatValue] = useState(\"\");\n    const [autoValue, setAutoValue] = useState<Demo.Country[]>([]);\n    const [selectedAutoValue, setSelectedAutoValue] = useState(null);\n    const [autoFilteredValue, setAutoFilteredValue] = useState<Demo.Country[]>(\n        []\n    );\n    const [calendarValue, setCalendarValue] = useState<any>(null);\n    const [inputNumberValue, setInputNumberValue] = useState<number | null>(\n        null\n    );\n    const [chipsValue, setChipsValue] = useState<any[]>([]);\n    const [sliderValue, setSliderValue] = useState<number | string>(\"\");\n    const [ratingValue, setRatingValue] = useState<number | null>(null);\n    const [colorValue, setColorValue] = useState<\n        string | ColorPickerRGBType | ColorPickerHSBType\n    >(\"1976D2\");\n    const [knobValue, setKnobValue] = useState(20);\n    const [radioValue, setRadioValue] = useState(null);\n    const [checkboxValue, setCheckboxValue] = useState<string[]>([]);\n    const [switchValue, setSwitchValue] = useState(false);\n    const [listboxValue, setListboxValue] = useState(null);\n    const [dropdownValue, setDropdownValue] = useState(null);\n    const [multiselectValue, setMultiselectValue] = useState(null);\n    const [toggleValue, setToggleValue] = useState(false);\n    const [selectButtonValue1, setSelectButtonValue1] = useState(null);\n    const [selectButtonValue2, setSelectButtonValue2] = useState(null);\n    const [inputGroupValue, setInputGroupValue] = useState(false);\n\n    const listboxValues: InputValue[] = [\n        { name: \"New York\", code: \"NY\" },\n        { name: \"Rome\", code: \"RM\" },\n        { name: \"London\", code: \"LDN\" },\n        { name: \"Istanbul\", code: \"IST\" },\n        { name: \"Paris\", code: \"PRS\" },\n    ];\n\n    const dropdownValues: InputValue[] = [\n        { name: \"New York\", code: \"NY\" },\n        { name: \"Rome\", code: \"RM\" },\n        { name: \"London\", code: \"LDN\" },\n        { name: \"Istanbul\", code: \"IST\" },\n        { name: \"Paris\", code: \"PRS\" },\n    ];\n\n    const multiselectValues: InputValue[] = [\n        { name: \"Australia\", code: \"AU\" },\n        { name: \"Brazil\", code: \"BR\" },\n        { name: \"China\", code: \"CN\" },\n        { name: \"Egypt\", code: \"EG\" },\n        { name: \"France\", code: \"FR\" },\n        { name: \"Germany\", code: \"DE\" },\n        { name: \"India\", code: \"IN\" },\n        { name: \"Japan\", code: \"JP\" },\n        { name: \"Spain\", code: \"ES\" },\n        { name: \"United States\", code: \"US\" },\n    ];\n\n    const selectButtonValues1: InputValue[] = [\n        { name: \"Option 1\", code: \"O1\" },\n        { name: \"Option 2\", code: \"O2\" },\n        { name: \"Option 3\", code: \"O3\" },\n    ];\n\n    const selectButtonValues2: InputValue[] = [\n        { name: \"Option 1\", code: \"O1\" },\n        { name: \"Option 2\", code: \"O2\" },\n        { name: \"Option 3\", code: \"O3\" },\n    ];\n\n\n\n    const searchCountry = (event: AutoCompleteCompleteEvent) => {\n        setTimeout(() => {\n            if (!event.query.trim().length) {\n                setAutoFilteredValue([...autoValue]);\n            } else {\n                setAutoFilteredValue(\n                    autoValue.filter((country) => {\n                        return country.name\n                            .toLowerCase()\n                            .startsWith(event.query.toLowerCase());\n                    })\n                );\n            }\n        }, 250);\n    };\n\n    const onCheckboxChange = (e: CheckboxChangeEvent) => {\n        let selectedValue = [...checkboxValue];\n        if (e.checked) selectedValue.push(e.value);\n        else selectedValue.splice(selectedValue.indexOf(e.value), 1);\n\n        setCheckboxValue(selectedValue);\n    };\n\n    const itemTemplate = (option: InputValue) => {\n        return (\n            <div className=\"flex align-items-center\">\n                <img\n                    alt={option.name}\n                    src={`/demo/images/flag/flag_placeholder.png`}\n                    onError={(e) =>\n                        (e.currentTarget.src =\n                            \"https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png\")\n                    }\n                    className={`flag flag-${option.code.toLowerCase()}`}\n                    style={{ width: \"21px\" }}\n                />\n                <span className=\"ml-2\">{option.name}</span>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"grid p-fluid input-demo\">\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>InputText</h5>\n                    <div className=\"grid formgrid\">\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <InputText\n                                type=\"text\"\n                                placeholder=\"Default\"\n                            ></InputText>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <InputText\n                                type=\"text\"\n                                placeholder=\"Disabled\"\n                                disabled\n                            ></InputText>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <InputText\n                                type=\"text\"\n                                placeholder=\"Invalid\"\n                                className=\"p-invalid\"\n                            />\n                        </div>\n                    </div>\n\n                    <h5>Icons</h5>\n                    <div className=\"grid formgrid\">\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <span className=\"p-input-icon-left\">\n                                <i className=\"pi pi-user\" />\n                                <InputText type=\"text\" placeholder=\"Username\" />\n                            </span>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <span className=\"p-input-icon-right\">\n                                <InputText type=\"text\" placeholder=\"Search\" />\n                                <i className=\"pi pi-search\" />\n                            </span>\n                        </div>\n                        <div className=\"col-12 mb-2 lg:col-4 lg:mb-0\">\n                            <span className=\"p-input-icon-left p-input-icon-right\">\n                                <i className=\"pi pi-user\" />\n                                <InputText type=\"text\" placeholder=\"Search\" />\n                                <i className=\"pi pi-search\" />\n                            </span>\n                        </div>\n                    </div>\n\n                    <h5>Float Label</h5>\n                    <span className=\"p-float-label\">\n                        <InputText\n                            id=\"username\"\n                            type=\"text\"\n                            value={floatValue}\n                            onChange={(e) => setFloatValue(e.target.value)}\n                        />\n                        <label htmlFor=\"username\">Username</label>\n                    </span>\n\n                    <h5>Textarea</h5>\n                    <InputTextarea\n                        placeholder=\"Your Message\"\n                        rows={5}\n                        cols={30}\n                    />\n\n                    <h5>AutoComplete</h5>\n                    <AutoComplete\n                        placeholder=\"Search\"\n                        id=\"dd\"\n                        dropdown\n                        multiple\n                        value={selectedAutoValue}\n                        onChange={(e) => setSelectedAutoValue(e.value)}\n                        suggestions={autoFilteredValue}\n                        completeMethod={searchCountry}\n                        field=\"name\"\n                    />\n\n                    <h5>Calendar</h5>\n                    <Calendar\n                        showIcon\n                        showButtonBar\n                        value={calendarValue}\n                        onChange={(e) => setCalendarValue(e.value ?? null)}\n                    />\n\n                    <h5>InputNumber</h5>\n                    <InputNumber\n                        value={inputNumberValue}\n                        onValueChange={(e) =>\n                            setInputNumberValue(e.value ?? null)\n                        }\n                        showButtons\n                        mode=\"decimal\"\n                    ></InputNumber>\n\n                    <h5>Chips</h5>\n                    <Chips\n                        value={chipsValue}\n                        onChange={(e) => setChipsValue(e.value ?? [])}\n                    />\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"grid\">\n                        <div className=\"col-12\">\n                            <h5>Slider</h5>\n                            <InputText\n                                value={sliderValue as string}\n                                onChange={(e) =>\n                                    setSliderValue(parseInt(e.target.value, 10))\n                                }\n                            />\n                            <Slider\n                                value={sliderValue as number}\n                                onChange={(e) =>\n                                    setSliderValue(e.value as number)\n                                }\n                            />\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <h5>Rating</h5>\n                            <Rating\n                                value={ratingValue as number}\n                                onChange={(e) => setRatingValue(e.value ?? 0)}\n                            />\n                        </div>\n                        <div className=\"col-12 md:col-6\">\n                            <h5>ColorPicker</h5>\n                            <ColorPicker\n                                value={colorValue}\n                                onChange={(e) => setColorValue(e.value ?? \"\")}\n                                style={{ width: \"2rem\" }}\n                            />\n                        </div>\n                        <div className=\"col-12\">\n                            <h5>Knob</h5>\n                            <Knob\n                                value={knobValue}\n                                valueTemplate={\"{value}%\"}\n                                onChange={(e) => setKnobValue(e.value)}\n                                step={10}\n                                min={-50}\n                                max={50}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-12 md:col-6\">\n                <div className=\"card\">\n                    <h5>RadioButton</h5>\n                    <div className=\"grid\">\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-radiobutton\">\n                                <RadioButton\n                                    inputId=\"option1\"\n                                    name=\"option\"\n                                    value=\"Chicago\"\n                                    checked={radioValue === \"Chicago\"}\n                                    onChange={(e) => setRadioValue(e.value)}\n                                />\n                                <label htmlFor=\"option1\">Chicago</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-radiobutton\">\n                                <RadioButton\n                                    inputId=\"option2\"\n                                    name=\"option\"\n                                    value=\"Los Angeles\"\n                                    checked={radioValue === \"Los Angeles\"}\n                                    onChange={(e) => setRadioValue(e.value)}\n                                />\n                                <label htmlFor=\"option2\">Los Angeles</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-radiobutton\">\n                                <RadioButton\n                                    inputId=\"option3\"\n                                    name=\"option\"\n                                    value=\"New York\"\n                                    checked={radioValue === \"New York\"}\n                                    onChange={(e) => setRadioValue(e.value)}\n                                />\n                                <label htmlFor=\"option3\">New York</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h5>Checkbox</h5>\n                    <div className=\"grid\">\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-checkbox\">\n                                <Checkbox\n                                    inputId=\"checkOption1\"\n                                    name=\"option\"\n                                    value=\"Chicago\"\n                                    checked={\n                                        checkboxValue.indexOf(\"Chicago\") !== -1\n                                    }\n                                    onChange={onCheckboxChange}\n                                />\n                                <label htmlFor=\"checkOption1\">Chicago</label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-checkbox\">\n                                <Checkbox\n                                    inputId=\"checkOption2\"\n                                    name=\"option\"\n                                    value=\"Los Angeles\"\n                                    checked={\n                                        checkboxValue.indexOf(\"Los Angeles\") !==\n                                        -1\n                                    }\n                                    onChange={onCheckboxChange}\n                                />\n                                <label htmlFor=\"checkOption2\">\n                                    Los Angeles\n                                </label>\n                            </div>\n                        </div>\n                        <div className=\"col-12 md:col-4\">\n                            <div className=\"field-checkbox\">\n                                <Checkbox\n                                    inputId=\"checkOption3\"\n                                    name=\"option\"\n                                    value=\"New York\"\n                                    checked={\n                                        checkboxValue.indexOf(\"New York\") !== -1\n                                    }\n                                    onChange={onCheckboxChange}\n                                />\n                                <label htmlFor=\"checkOption3\">New York</label>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h5>Input Switch</h5>\n                    <InputSwitch\n                        checked={switchValue}\n                        onChange={(e) => setSwitchValue(e.value ?? false)}\n                    />\n                </div>\n\n                <div className=\"card\">\n                    <h5>Listbox</h5>\n                    <ListBox\n                        value={listboxValue}\n                        onChange={(e) => setListboxValue(e.value)}\n                        options={listboxValues}\n                        optionLabel=\"name\"\n                        filter\n                    />\n\n                    <h5>Dropdown</h5>\n                    <Dropdown\n                        value={dropdownValue}\n                        onChange={(e) => setDropdownValue(e.value)}\n                        options={dropdownValues}\n                        optionLabel=\"name\"\n                        placeholder=\"Select\"\n                    />\n\n                    <h5>MultiSelect</h5>\n                    <MultiSelect\n                        value={multiselectValue}\n                        onChange={(e) => setMultiselectValue(e.value)}\n                        options={multiselectValues}\n                        itemTemplate={itemTemplate}\n                        optionLabel=\"name\"\n                        placeholder=\"Select Countries\"\n                        filter\n                        className=\"multiselect-custom\"\n                        display=\"chip\"\n                    />\n                </div>\n\n                <div className=\"card\">\n                    <h5>ToggleButton</h5>\n                    <ToggleButton\n                        checked={toggleValue}\n                        onChange={(e) => setToggleValue(e.value)}\n                        onLabel=\"Yes\"\n                        offLabel=\"No\"\n                    />\n\n                    <h5>SelectButton</h5>\n                    <SelectButton\n                        value={selectButtonValue1}\n                        onChange={(e) => setSelectButtonValue1(e.value)}\n                        options={selectButtonValues1}\n                        optionLabel=\"name\"\n                    />\n\n                    <h5>SelectButton - Multiple</h5>\n                    <SelectButton\n                        value={selectButtonValue2}\n                        onChange={(e) => setSelectButtonValue2(e.value)}\n                        options={selectButtonValues2}\n                        optionLabel=\"name\"\n                        multiple\n                    />\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Input Groups</h5>\n                    <div className=\"grid p-fluid\">\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\">\n                                    <i className=\"pi pi-user\"></i>\n                                </span>\n                                <InputText placeholder=\"Username\" />\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon\">\n                                    <i className=\"pi pi-shopping-cart\"></i>\n                                </span>\n                                <span className=\"p-inputgroup-addon\">\n                                    <i className=\"pi pi-globe\"></i>\n                                </span>\n                                <InputText placeholder=\"Price\" />\n                                <span className=\"p-inputgroup-addon\">$</span>\n                                <span className=\"p-inputgroup-addon\">.00</span>\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <Button label=\"Search\" />\n                                <InputText placeholder=\"Keyword\" />\n                            </div>\n                        </div>\n\n                        <div className=\"col-12 md:col-6\">\n                            <div className=\"p-inputgroup\">\n                                <span className=\"p-inputgroup-addon p-inputgroup-addon-checkbox\">\n                                    <Checkbox\n                                        checked={inputGroupValue}\n                                        onChange={(e) =>\n                                            setInputGroupValue(\n                                                e.checked ?? false\n                                            )\n                                        }\n                                    />\n                                </span>\n                                <InputText placeholder=\"Confirm\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InputDemo;\n"
        }
    ]
}