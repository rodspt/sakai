{
    "sourceFile": "app/(main)/uikit/table/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 33,
            "patches": [
                {
                    "date": 1706140646302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706140672853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,12 +74,13 @@\n \n     useEffect(() => {\n         setLoading2(true);\n \n-        CustomerService.getCustomersLarge().then((data) => {\n+       /* CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n+        */\n         CustomerService.getCustomersLarge().then((data) => {\n             setCustomers2(getCustomers(data));\n             setLoading2(false);\n         });\n"
                },
                {
                    "date": 1706140678699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         );\n     };\n \n     useEffect(() => {\n-        setLoading2(true);\n+        //setLoading2(true);\n \n        /* CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706140686901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,15 +78,16 @@\n        /* CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n-        */\n+        \n         CustomerService.getCustomersLarge().then((data) => {\n             setCustomers2(getCustomers(data));\n             setLoading2(false);\n         });\n         CustomerService.getCustomersMedium().then((data) => setCustomers3(data));\n         ProductService.getProductsWithOrdersSmall().then((data) => setProducts(data));\n+        */\n \n         initFilters1();\n     }, []);\n \n"
                },
                {
                    "date": 1706140710859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,10 @@\n     };\n \n     useEffect(() => {\n         //setLoading2(true);\n+        setLoading1(false);\n+        setLoading2(false);\n \n        /* CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706147317461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         );\n     };\n \n     useEffect(() => {\n-        //setLoading2(true);\n+        //OLDD setLoading2(true);\n         setLoading1(false);\n         setLoading2(false);\n \n        /* CustomerService.getCustomersLarge().then((data) => {\n"
                },
                {
                    "date": 1706147322568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n         //OLDD setLoading2(true);\n         setLoading1(false);\n         setLoading2(false);\n \n-       /* CustomerService.getCustomersLarge().then((data) => {\n+       /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n         \n"
                },
                {
                    "date": 1706147518362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,48 @@\n         //OLDD setLoading2(true);\n         setLoading1(false);\n         setLoading2(false);\n \n+        0\n+        const myCustomers =\n+        [{\n+            \"id\": 1000,\n+            \"name\": \"James Butt\",\n+            \"country\": {\n+                \"name\": \"Algeria\",\n+                \"code\": \"dz\"\n+            },\n+            \"company\": \"Benton, John B Jr\",\n+            \"date\": \"2015-09-13T00:00:00.000Z\",\n+            \"status\": \"unqualified\",\n+            \"verified\": true,\n+            \"activity\": 17,\n+            \"representative\": {\n+                \"name\": \"Ioni Bowcher\",\n+                \"image\": \"ionibowcher.png\"\n+            },\n+            \"balance\": 70663\n+        },\n+        {\n+            \"id\": 1001,\n+            \"name\": \"Josephine Darakjy\",\n+            \"country\": {\n+                \"name\": \"Egypt\",\n+                \"code\": \"eg\"\n+            },\n+            \"company\": \"Chanay, Jeffrey A Esq\",\n+            \"date\": \"2019-02-09T00:00:00.000Z\",\n+            \"status\": \"proposal\",\n+            \"verified\": true,\n+            \"activity\": 0,\n+            \"representative\": {\n+                \"name\": \"Amy Elsner\",\n+                \"image\": \"amyelsner.png\"\n+            },\n+            \"balance\": 82429\n+        }];\n+\n+        setCustomers1(getCustomers(myCustomers);)\n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n"
                },
                {
                    "date": 1706147527627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,8 @@\n         //OLDD setLoading2(true);\n         setLoading1(false);\n         setLoading2(false);\n \n-        0\n         const myCustomers =\n         [{\n             \"id\": 1000,\n             \"name\": \"James Butt\",\n@@ -115,9 +114,9 @@\n             },\n             \"balance\": 82429\n         }];\n \n-        setCustomers1(getCustomers(myCustomers);)\n+        setCustomers1(getCustomers(myCustomers));\n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n"
                },
                {
                    "date": 1706147539214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n         //OLDD setLoading2(true);\n         setLoading1(false);\n         setLoading2(false);\n \n-        const myCustomers =\n+        const myCustomers: Demo.Customer[] =\n         [{\n             \"id\": 1000,\n             \"name\": \"James Butt\",\n             \"country\": {\n"
                },
                {
                    "date": 1706147625142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,9 @@\n         return (\n             <React.Fragment>\n                 <img\n                     alt={representative.name}\n-                    src={`/demo/images/avatar/${representative.image}`}\n+                    src={`/avatar/${representative.image}`}\n                     onError={(e) => ((e.target as HTMLImageElement).src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png')}\n                     width={32}\n                     style={{ verticalAlign: 'middle' }}\n                 />\n"
                },
                {
                    "date": 1706147637731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,9 +194,9 @@\n \n     const countryBodyTemplate = (rowData: Demo.Customer) => {\n         return (\n             <React.Fragment>\n-                <img alt=\"flag\" src={`/demo/images/flag/flag_placeholder.png`} className={`flag flag-${rowData.country.code}`} width={30} />\n+                <img alt=\"flag\" src={`/flag/flag_placeholder.png`} className={`flag flag-${rowData.country.code}`} width={30} />\n                 <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }}>{rowData.country.name}</span>\n             </React.Fragment>\n         );\n     };\n"
                },
                {
                    "date": 1706147652476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -236,9 +236,9 @@\n \n     const representativesItemTemplate = (option: any) => {\n         return (\n             <div className=\"p-multiselect-representative-option\">\n-                <img alt={option.name} src={`/demo/images/avatar/${option.image}`} width={32} style={{ verticalAlign: 'middle' }} />\n+                <img alt={option.name} src={`/avatar/${option.image}`} width={32} style={{ verticalAlign: 'middle' }} />\n                 <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }}>{option.name}</span>\n             </div>\n         );\n     };\n"
                },
                {
                    "date": 1706147669860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,9 @@\n         return <Button icon=\"pi pi-search\" />;\n     };\n \n     const imageBodyTemplate = (rowData: Demo.Product) => {\n-        return <img src={`/demo/images/product/${rowData.image}`} onError={(e) => ((e.target as HTMLImageElement).src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png')} alt={rowData.image} className=\"shadow-2\" width={100} />;\n+        return <img src={`/product/${rowData.image}`} onError={(e) => ((e.target as HTMLImageElement).src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png')} alt={rowData.image} className=\"shadow-2\" width={100} />;\n     };\n \n     const priceBodyTemplate = (rowData: Demo.Product) => {\n         return formatCurrency(rowData.price as number);\n@@ -368,9 +368,9 @@\n \n     const headerTemplate = (data: Demo.Customer) => {\n         return (\n             <React.Fragment>\n-                <img alt={data.representative.name} src={`/demo/images/avatar/${data.representative.image}`} width=\"32\" style={{ verticalAlign: 'middle' }} />\n+                <img alt={data.representative.name} src={`/avatar/${data.representative.image}`} width=\"32\" style={{ verticalAlign: 'middle' }} />\n                 <span className=\"font-bold ml-2\">{data.representative.name}</span>\n             </React.Fragment>\n         );\n     };\n"
                },
                {
                    "date": 1706147713536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,8 +115,11 @@\n             \"balance\": 82429\n         }];\n \n         setCustomers1(getCustomers(myCustomers));\n+        setCustomers2(getCustomers(myCustomers));\n+\n+\n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n"
                },
                {
                    "date": 1706147753211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,9 @@\n         }];\n \n         setCustomers1(getCustomers(myCustomers));\n         setCustomers2(getCustomers(myCustomers));\n+        setCustomers3(getCustomers(myCustomers));\n \n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n"
                },
                {
                    "date": 1706147779765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n         }];\n \n         setCustomers1(getCustomers(myCustomers));\n         setCustomers2(getCustomers(myCustomers));\n-        setCustomers3(getCustomers(myCustomers));\n+        setCustomers3(myCustomers);\n \n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n"
                },
                {
                    "date": 1706147793548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,11 +116,10 @@\n         }];\n \n         setCustomers1(getCustomers(myCustomers));\n         setCustomers2(getCustomers(myCustomers));\n-        setCustomers3(myCustomers);\n+      \n \n-\n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n"
                },
                {
                    "date": 1706147882831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,8 +116,44 @@\n         }];\n \n         setCustomers1(getCustomers(myCustomers));\n         setCustomers2(getCustomers(myCustomers));\n+\n+        const myCustomers3: Demo.Customer[] =\n+        [{\n+        \n+            \"id\": 1000,\n+            \"name\": \"James Butt\",\n+            \"country\": {\n+                \"name\": \"Algeria\",\n+                \"code\": \"dz\"\n+            },\n+            \"company\": \"Benton, John B Jr\",\n+            \"date\": \"2015-09-13\",\n+            \"status\": \"unqualified\",\n+            \"activity\": 17,\n+            \"representative\": {\n+                \"name\": \"Ioni Bowcher\",\n+                \"image\": \"ionibowcher.png\"\n+            }\n+        },\n+        {\n+            \"id\": 1001,\n+            \"name\": \"Josephine Darakjy\",\n+            \"country\": {\n+                \"name\": \"Egypt\",\n+                \"code\": \"eg\"\n+            },\n+            \"company\": \"Chanay, Jeffrey A Esq\",\n+            \"date\": \"2019-02-09\",\n+            \"status\": \"proposal\",\n+            \"activity\": 0,\n+            \"representative\": {\n+                \"name\": \"Amy Elsner\",\n+                \"image\": \"amyelsner.png\"\n+            }\n+        }];\n+\n       \n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n"
                },
                {
                    "date": 1706147916657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,9 +152,9 @@\n                 \"image\": \"amyelsner.png\"\n             }\n         }];\n \n-      \n+        setCustomers2(myCustomers3);\n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706147964047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n         });\n     };\n \n     const formatDate = (value: Date) => {\n-        return value.toLocaleDateString('en-US', {\n+        return value.toLocaleDateString('pt-BR', {\n             day: '2-digit',\n             month: '2-digit',\n             year: 'numeric'\n         });\n"
                },
                {
                    "date": 1706147974709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n         });\n     };\n \n     const formatDate = (value: Date) => {\n-        return value.toLocaleDateString('pt-BR', {\n+        return value?.toLocaleDateString('pt-BR', {\n             day: '2-digit',\n             month: '2-digit',\n             year: 'numeric'\n         });\n"
                },
                {
                    "date": 1706147981645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -186,9 +186,9 @@\n         });\n     };\n \n     const formatDate = (value: Date) => {\n-        return value?.toLocaleDateString('pt-BR', {\n+        return value.toLocaleDateString('pt-BR', {\n             day: '2-digit',\n             month: '2-digit',\n             year: 'numeric'\n         });\n"
                },
                {
                    "date": 1706148012090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,9 +152,9 @@\n                 \"image\": \"amyelsner.png\"\n             }\n         }];\n \n-        setCustomers2(myCustomers3);\n+        setCustomers2(getCustomers(myCustomers3));\n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706148067036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n                 \"name\": \"Algeria\",\n                 \"code\": \"dz\"\n             },\n             \"company\": \"Benton, John B Jr\",\n-            \"date\": \"2015-09-13\",\n+            \"date\": \"13/09/2023\",\n             \"status\": \"unqualified\",\n             \"activity\": 17,\n             \"representative\": {\n                 \"name\": \"Ioni Bowcher\",\n@@ -143,9 +143,9 @@\n                 \"name\": \"Egypt\",\n                 \"code\": \"eg\"\n             },\n             \"company\": \"Chanay, Jeffrey A Esq\",\n-            \"date\": \"2019-02-09\",\n+            \"date\": \"13/09/2023\",\n             \"status\": \"proposal\",\n             \"activity\": 0,\n             \"representative\": {\n                 \"name\": \"Amy Elsner\",\n"
                },
                {
                    "date": 1706148084555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n                 \"name\": \"Algeria\",\n                 \"code\": \"dz\"\n             },\n             \"company\": \"Benton, John B Jr\",\n-            \"date\": \"13/09/2023\",\n+            \"date\": \"2015-09-13\",\n             \"status\": \"unqualified\",\n             \"activity\": 17,\n             \"representative\": {\n                 \"name\": \"Ioni Bowcher\",\n@@ -143,9 +143,9 @@\n                 \"name\": \"Egypt\",\n                 \"code\": \"eg\"\n             },\n             \"company\": \"Chanay, Jeffrey A Esq\",\n-            \"date\": \"13/09/2023\",\n+            \"date\": \"2019-02-09\",\n             \"status\": \"proposal\",\n             \"activity\": 0,\n             \"representative\": {\n                 \"name\": \"Amy Elsner\",\n"
                },
                {
                    "date": 1706148133473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,10 +118,9 @@\n         setCustomers1(getCustomers(myCustomers));\n         setCustomers2(getCustomers(myCustomers));\n \n         const myCustomers3: Demo.Customer[] =\n-        [{\n-        \n+        [ {\n             \"id\": 1000,\n             \"name\": \"James Butt\",\n             \"country\": {\n                 \"name\": \"Algeria\",\n"
                },
                {
                    "date": 1706148155857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n                 \"image\": \"amyelsner.png\"\n             }\n         }];\n \n-        setCustomers2(getCustomers(myCustomers3));\n+        //setCustomers2(getCustomers(myCustomers3));\n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706148166808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n                 \"image\": \"amyelsner.png\"\n             }\n         }];\n \n-        //setCustomers2(getCustomers(myCustomers3));\n+        setCustomers3(getCustomers(myCustomers3));\n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706148176607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n                 \"image\": \"amyelsner.png\"\n             }\n         }];\n \n-        setCustomers3(getCustomers(myCustomers3));\n+        setCustomers3(myCustomers3);\n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706148237555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,8 +153,93 @@\n         }];\n \n         setCustomers3(myCustomers3);\n \n+        const myProducts = [\n+            {\n+                \"id\": \"1000\",\n+                \"code\": \"f230fh0g3\",\n+                \"name\": \"Bamboo Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"bamboo-watch.jpg\",\n+                \"price\": 65,\n+                \"category\": \"Accessories\",\n+                \"quantity\": 24,\n+                \"inventoryStatus\": \"INSTOCK\",\n+                \"rating\": 5,\n+                \"orders\": [\n+                    {\n+                        \"id\": \"1000\",\n+                        \"productCode\": \"f230fh0g3\",\n+                        \"date\": \"2020-09-13\",\n+                        \"amount\": 65,\n+                        \"quantity\": 1,\n+                        \"customer\": \"David James\",\n+                        \"status\": \"PENDING\"\n+                    },\n+                    {\n+                        \"id\": \"1001\",\n+                        \"productCode\": \"f230fh0g3\",\n+                        \"date\": \"2020-05-14\",\n+                        \"amount\": 130,\n+                        \"quantity\": 2,\n+                        \"customer\": \"Leon Rodrigues\",\n+                        \"status\": \"DELIVERED\"\n+                    },\n+                    {\n+                        \"id\": \"1002\",\n+                        \"productCode\": \"f230fh0g3\",\n+                        \"date\": \"2019-01-04\",\n+                        \"amount\": 65,\n+                        \"quantity\": 1,\n+                        \"customer\": \"Juan Alejandro\",\n+                        \"status\": \"RETURNED\"\n+                    },\n+                    {\n+                        \"id\": \"1003\",\n+                        \"productCode\": \"f230fh0g3\",\n+                        \"date\": \"2020-09-13\",\n+                        \"amount\": 195,\n+                        \"quantity\": 3,\n+                        \"customer\": \"Claire Morrow\",\n+                        \"status\": \"CANCELLED\"\n+                    }\n+                ]\n+            },\n+            {\n+                \"id\": \"1001\",\n+                \"code\": \"nvklal433\",\n+                \"name\": \"Black Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"black-watch.jpg\",\n+                \"price\": 72,\n+                \"category\": \"Accessories\",\n+                \"quantity\": 61,\n+                \"inventoryStatus\": \"INSTOCK\",\n+                \"rating\": 4,\n+                \"orders\": [\n+                    {\n+                        \"id\": \"2000\",\n+                        \"productCode\": \"nvklal433\",\n+                        \"date\": \"2020-05-14\",\n+                        \"amount\": 72,\n+                        \"quantity\": 1,\n+                        \"customer\": \"Maisha Jefferson\",\n+                        \"status\": \"DELIVERED\"\n+                    },\n+                    {\n+                        \"id\": \"2001\",\n+                        \"productCode\": \"nvklal433\",\n+                        \"date\": \"2020-02-28\",\n+                        \"amount\": 144,\n+                        \"quantity\": 2,\n+                        \"customer\": \"Octavia Murillo\",\n+                        \"status\": \"PENDING\"\n+                    }\n+                ]\n+            }\n+        ];\n+\n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n         });\n"
                },
                {
                    "date": 1706148251367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,8 +237,9 @@\n                     }\n                 ]\n             }\n         ];\n+        setProducts(myProducts);\n \n        /*OLDD  CustomerService.getCustomersLarge().then((data) => {\n             setCustomers1(getCustomers(data));\n             setLoading1(false);\n"
                },
                {
                    "date": 1706148286404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -159,9 +159,9 @@\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"Bamboo Watch\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"bamboo-watch.jpg\",\n+                \"image\": \"headphones.jpg\",\n                 \"price\": 65,\n                 \"category\": \"Accessories\",\n                 \"quantity\": 24,\n                 \"inventoryStatus\": \"INSTOCK\",\n"
                },
                {
                    "date": 1706148296825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -209,9 +209,9 @@\n                 \"id\": \"1001\",\n                 \"code\": \"nvklal433\",\n                 \"name\": \"Black Watch\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"black-watch.jpg\",\n+                \"image\": \"gaming-set.jpg\",\n                 \"price\": 72,\n                 \"category\": \"Accessories\",\n                 \"quantity\": 61,\n                 \"inventoryStatus\": \"INSTOCK\",\n"
                }
            ],
            "date": 1706140646302,
            "name": "Commit-0",
            "content": "'use client';\n//import { CustomerService } from '../../../../demo/service/CustomerService';\n//import { ProductService } from '../../../../demo/service/ProductService';\nimport { FilterMatchMode, FilterOperator } from 'primereact/api';\nimport { Button } from 'primereact/button';\nimport { Calendar } from 'primereact/calendar';\nimport { Column, ColumnFilterApplyTemplateOptions, ColumnFilterClearTemplateOptions, ColumnFilterElementTemplateOptions } from 'primereact/column';\nimport { DataTable, DataTableExpandedRows, DataTableFilterMeta } from 'primereact/datatable';\nimport { Dropdown } from 'primereact/dropdown';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { InputText } from 'primereact/inputtext';\nimport { MultiSelect } from 'primereact/multiselect';\nimport { ProgressBar } from 'primereact/progressbar';\nimport { Rating } from 'primereact/rating';\nimport { Slider } from 'primereact/slider';\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { TriStateCheckbox } from 'primereact/tristatecheckbox';\nimport { classNames } from 'primereact/utils';\nimport React, { useEffect, useState } from 'react';\nimport type { Demo } from '@/types';\n\nconst TableDemo = () => {\n    const [customers1, setCustomers1] = useState<Demo.Customer[]>([]);\n    const [customers2, setCustomers2] = useState<Demo.Customer[]>([]);\n    const [customers3, setCustomers3] = useState<Demo.Customer[]>([]);\n    const [filters1, setFilters1] = useState<DataTableFilterMeta>({});\n    const [loading1, setLoading1] = useState(true);\n    const [loading2, setLoading2] = useState(true);\n    const [idFrozen, setIdFrozen] = useState(false);\n    const [products, setProducts] = useState<Demo.Product[]>([]);\n    const [globalFilterValue1, setGlobalFilterValue1] = useState('');\n    const [expandedRows, setExpandedRows] = useState<any[] | DataTableExpandedRows>([]);\n    const [allExpanded, setAllExpanded] = useState(false);\n\n    const representatives = [\n        { name: 'Amy Elsner', image: 'amyelsner.png' },\n        { name: 'Anna Fali', image: 'annafali.png' },\n        { name: 'Asiya Javayant', image: 'asiyajavayant.png' },\n        { name: 'Bernardo Dominic', image: 'bernardodominic.png' },\n        { name: 'Elwin Sharvill', image: 'elwinsharvill.png' },\n        { name: 'Ioni Bowcher', image: 'ionibowcher.png' },\n        { name: 'Ivan Magalhaes', image: 'ivanmagalhaes.png' },\n        { name: 'Onyama Limba', image: 'onyamalimba.png' },\n        { name: 'Stephen Shaw', image: 'stephenshaw.png' },\n        { name: 'XuXue Feng', image: 'xuxuefeng.png' }\n    ];\n\n    const statuses = ['unqualified', 'qualified', 'new', 'negotiation', 'renewal', 'proposal'];\n\n    const clearFilter1 = () => {\n        initFilters1();\n    };\n\n    const onGlobalFilterChange1 = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value;\n        let _filters1 = { ...filters1 };\n        (_filters1['global'] as any).value = value;\n\n        setFilters1(_filters1);\n        setGlobalFilterValue1(value);\n    };\n\n    const renderHeader1 = () => {\n        return (\n            <div className=\"flex justify-content-between\">\n                <Button type=\"button\" icon=\"pi pi-filter-slash\" label=\"Clear\" outlined onClick={clearFilter1} />\n                <span className=\"p-input-icon-left\">\n                    <i className=\"pi pi-search\" />\n                    <InputText value={globalFilterValue1} onChange={onGlobalFilterChange1} placeholder=\"Keyword Search\" />\n                </span>\n            </div>\n        );\n    };\n\n    useEffect(() => {\n        setLoading2(true);\n\n        CustomerService.getCustomersLarge().then((data) => {\n            setCustomers1(getCustomers(data));\n            setLoading1(false);\n        });\n        CustomerService.getCustomersLarge().then((data) => {\n            setCustomers2(getCustomers(data));\n            setLoading2(false);\n        });\n        CustomerService.getCustomersMedium().then((data) => setCustomers3(data));\n        ProductService.getProductsWithOrdersSmall().then((data) => setProducts(data));\n\n        initFilters1();\n    }, []);\n\n    const balanceTemplate = (rowData: Demo.Customer) => {\n        return (\n            <div>\n                <span className=\"text-bold\">{formatCurrency(rowData.balance as number)}</span>\n            </div>\n        );\n    };\n\n    const getCustomers = (data: Demo.Customer[]) => {\n        return [...(data || [])].map((d) => {\n            d.date = new Date(d.date);\n            return d;\n        });\n    };\n\n    const formatDate = (value: Date) => {\n        return value.toLocaleDateString('en-US', {\n            day: '2-digit',\n            month: '2-digit',\n            year: 'numeric'\n        });\n    };\n\n    const formatCurrency = (value: number) => {\n        return value.toLocaleString('en-US', {\n            style: 'currency',\n            currency: 'USD'\n        });\n    };\n\n    const initFilters1 = () => {\n        setFilters1({\n            global: { value: null, matchMode: FilterMatchMode.CONTAINS },\n            name: {\n                operator: FilterOperator.AND,\n                constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }]\n            },\n            'country.name': {\n                operator: FilterOperator.AND,\n                constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }]\n            },\n            representative: { value: null, matchMode: FilterMatchMode.IN },\n            date: {\n                operator: FilterOperator.AND,\n                constraints: [{ value: null, matchMode: FilterMatchMode.DATE_IS }]\n            },\n            balance: {\n                operator: FilterOperator.AND,\n                constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }]\n            },\n            status: {\n                operator: FilterOperator.OR,\n                constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }]\n            },\n            activity: { value: null, matchMode: FilterMatchMode.BETWEEN },\n            verified: { value: null, matchMode: FilterMatchMode.EQUALS }\n        });\n        setGlobalFilterValue1('');\n    };\n\n    const countryBodyTemplate = (rowData: Demo.Customer) => {\n        return (\n            <React.Fragment>\n                <img alt=\"flag\" src={`/demo/images/flag/flag_placeholder.png`} className={`flag flag-${rowData.country.code}`} width={30} />\n                <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }}>{rowData.country.name}</span>\n            </React.Fragment>\n        );\n    };\n\n    const filterClearTemplate = (options: ColumnFilterClearTemplateOptions) => {\n        return <Button type=\"button\" icon=\"pi pi-times\" onClick={options.filterClearCallback} severity=\"secondary\"></Button>;\n    };\n\n    const filterApplyTemplate = (options: ColumnFilterApplyTemplateOptions) => {\n        return <Button type=\"button\" icon=\"pi pi-check\" onClick={options.filterApplyCallback} severity=\"success\"></Button>;\n    };\n\n    const representativeBodyTemplate = (rowData: Demo.Customer) => {\n        const representative = rowData.representative;\n        return (\n            <React.Fragment>\n                <img\n                    alt={representative.name}\n                    src={`/demo/images/avatar/${representative.image}`}\n                    onError={(e) => ((e.target as HTMLImageElement).src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png')}\n                    width={32}\n                    style={{ verticalAlign: 'middle' }}\n                />\n                <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }}>{representative.name}</span>\n            </React.Fragment>\n        );\n    };\n\n    const representativeFilterTemplate = (options: ColumnFilterElementTemplateOptions) => {\n        return (\n            <>\n                <div className=\"mb-3 text-bold\">Agent Picker</div>\n                <MultiSelect value={options.value} options={representatives} itemTemplate={representativesItemTemplate} onChange={(e) => options.filterCallback(e.value)} optionLabel=\"name\" placeholder=\"Any\" className=\"p-column-filter\" />\n            </>\n        );\n    };\n\n    const representativesItemTemplate = (option: any) => {\n        return (\n            <div className=\"p-multiselect-representative-option\">\n                <img alt={option.name} src={`/demo/images/avatar/${option.image}`} width={32} style={{ verticalAlign: 'middle' }} />\n                <span style={{ marginLeft: '.5em', verticalAlign: 'middle' }}>{option.name}</span>\n            </div>\n        );\n    };\n\n    const dateBodyTemplate = (rowData: Demo.Customer) => {\n        return formatDate(rowData.date);\n    };\n\n    const dateFilterTemplate = (options: ColumnFilterElementTemplateOptions) => {\n        return <Calendar value={options.value} onChange={(e) => options.filterCallback(e.value, options.index)} dateFormat=\"mm/dd/yy\" placeholder=\"mm/dd/yyyy\" mask=\"99/99/9999\" />;\n    };\n\n    const balanceBodyTemplate = (rowData: Demo.Customer) => {\n        return formatCurrency(rowData.balance as number);\n    };\n\n    const balanceFilterTemplate = (options: ColumnFilterElementTemplateOptions) => {\n        return <InputNumber value={options.value} onChange={(e) => options.filterCallback(e.value, options.index)} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />;\n    };\n\n    const statusBodyTemplate = (rowData: Demo.Customer) => {\n        return <span className={`customer-badge status-${rowData.status}`}>{rowData.status}</span>;\n    };\n\n    const statusFilterTemplate = (options: ColumnFilterElementTemplateOptions) => {\n        return <Dropdown value={options.value} options={statuses} onChange={(e) => options.filterCallback(e.value, options.index)} itemTemplate={statusItemTemplate} placeholder=\"Select a Status\" className=\"p-column-filter\" showClear />;\n    };\n\n    const statusItemTemplate = (option: any) => {\n        return <span className={`customer-badge status-${option}`}>{option}</span>;\n    };\n\n    const activityBodyTemplate = (rowData: Demo.Customer) => {\n        return <ProgressBar value={rowData.activity} showValue={false} style={{ height: '.5rem' }}></ProgressBar>;\n    };\n\n    const activityFilterTemplate = (options: ColumnFilterElementTemplateOptions) => {\n        return (\n            <React.Fragment>\n                <Slider value={options.value} onChange={(e) => options.filterCallback(e.value)} range className=\"m-3\"></Slider>\n                <div className=\"flex align-items-center justify-content-between px-2\">\n                    <span>{options.value ? options.value[0] : 0}</span>\n                    <span>{options.value ? options.value[1] : 100}</span>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    const verifiedBodyTemplate = (rowData: Demo.Customer) => {\n        return (\n            <i\n                className={classNames('pi', {\n                    'text-green-500 pi-check-circle': rowData.verified,\n                    'text-pink-500 pi-times-circle': !rowData.verified\n                })}\n            ></i>\n        );\n    };\n\n    const verifiedFilterTemplate = (options: ColumnFilterElementTemplateOptions) => {\n        return <TriStateCheckbox value={options.value} onChange={(e) => options.filterCallback(e.value)} />;\n    };\n\n    const toggleAll = () => {\n        if (allExpanded) collapseAll();\n        else expandAll();\n    };\n\n    const expandAll = () => {\n        let _expandedRows = {} as { [key: string]: boolean };\n        products.forEach((p) => (_expandedRows[`${p.id}`] = true));\n\n        setExpandedRows(_expandedRows);\n        setAllExpanded(true);\n    };\n\n    const collapseAll = () => {\n        setExpandedRows([]);\n        setAllExpanded(false);\n    };\n\n    const amountBodyTemplate = (rowData: Demo.Customer) => {\n        return formatCurrency(rowData.amount as number);\n    };\n\n    const statusOrderBodyTemplate = (rowData: Demo.Customer) => {\n        return <span className={`order-badge order-${rowData.status?.toLowerCase()}`}>{rowData.status}</span>;\n    };\n\n    const searchBodyTemplate = () => {\n        return <Button icon=\"pi pi-search\" />;\n    };\n\n    const imageBodyTemplate = (rowData: Demo.Product) => {\n        return <img src={`/demo/images/product/${rowData.image}`} onError={(e) => ((e.target as HTMLImageElement).src = 'https://www.primefaces.org/wp-content/uploads/2020/05/placeholder.png')} alt={rowData.image} className=\"shadow-2\" width={100} />;\n    };\n\n    const priceBodyTemplate = (rowData: Demo.Product) => {\n        return formatCurrency(rowData.price as number);\n    };\n\n    const ratingBodyTemplate = (rowData: Demo.Product) => {\n        return <Rating value={rowData.rating} readOnly cancel={false} />;\n    };\n\n    const statusBodyTemplate2 = (rowData: Demo.Product) => {\n        return <span className={`product-badge status-${rowData.inventoryStatus?.toLowerCase()}`}>{rowData.inventoryStatus}</span>;\n    };\n\n    const rowExpansionTemplate = (data: Demo.Product) => {\n        return (\n            <div className=\"orders-subtable\">\n                <h5>Orders for {data.name}</h5>\n                <DataTable value={data.orders} responsiveLayout=\"scroll\">\n                    <Column field=\"id\" header=\"Id\" sortable></Column>\n                    <Column field=\"customer\" header=\"Customer\" sortable></Column>\n                    <Column field=\"date\" header=\"Date\" sortable></Column>\n                    <Column field=\"amount\" header=\"Amount\" body={amountBodyTemplate} sortable></Column>\n                    <Column field=\"status\" header=\"Status\" body={statusOrderBodyTemplate} sortable></Column>\n                    <Column headerStyle={{ width: '4rem' }} body={searchBodyTemplate}></Column>\n                </DataTable>\n            </div>\n        );\n    };\n\n    const header = <Button icon={allExpanded ? 'pi pi-minus' : 'pi pi-plus'} label={allExpanded ? 'Collapse All' : 'Expand All'} onClick={toggleAll} className=\"w-11rem\" />;\n\n    const headerTemplate = (data: Demo.Customer) => {\n        return (\n            <React.Fragment>\n                <img alt={data.representative.name} src={`/demo/images/avatar/${data.representative.image}`} width=\"32\" style={{ verticalAlign: 'middle' }} />\n                <span className=\"font-bold ml-2\">{data.representative.name}</span>\n            </React.Fragment>\n        );\n    };\n\n    const footerTemplate = (data: Demo.Customer) => {\n        return (\n            <React.Fragment>\n                <td colSpan={4} style={{ textAlign: 'right' }} className=\"text-bold pr-6\">\n                    Total Customers\n                </td>\n                <td>{calculateCustomerTotal(data.representative.name)}</td>\n            </React.Fragment>\n        );\n    };\n\n    const calculateCustomerTotal = (name: string) => {\n        let total = 0;\n\n        if (customers3) {\n            for (let customer of customers3) {\n                if (customer.representative.name === name) {\n                    total++;\n                }\n            }\n        }\n\n        return total;\n    };\n\n    const header1 = renderHeader1();\n\n    return (\n        <div className=\"grid\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Filter Menu</h5>\n                    <DataTable\n                        value={customers1}\n                        paginator\n                        className=\"p-datatable-gridlines\"\n                        showGridlines\n                        rows={10}\n                        dataKey=\"id\"\n                        filters={filters1}\n                        filterDisplay=\"menu\"\n                        loading={loading1}\n                        responsiveLayout=\"scroll\"\n                        emptyMessage=\"No customers found.\"\n                        header={header1}\n                    >\n                        <Column field=\"name\" header=\"Name\" filter filterPlaceholder=\"Search by name\" style={{ minWidth: '12rem' }} />\n                        <Column header=\"Country\" filterField=\"country.name\" style={{ minWidth: '12rem' }} body={countryBodyTemplate} filter filterPlaceholder=\"Search by country\" filterClear={filterClearTemplate} filterApply={filterApplyTemplate} />\n                        <Column\n                            header=\"Agent\"\n                            filterField=\"representative\"\n                            showFilterMatchModes={false}\n                            filterMenuStyle={{ width: '14rem' }}\n                            style={{ minWidth: '14rem' }}\n                            body={representativeBodyTemplate}\n                            filter\n                            filterElement={representativeFilterTemplate}\n                        />\n                        <Column header=\"Date\" filterField=\"date\" dataType=\"date\" style={{ minWidth: '10rem' }} body={dateBodyTemplate} filter filterElement={dateFilterTemplate} />\n                        <Column header=\"Balance\" filterField=\"balance\" dataType=\"numeric\" style={{ minWidth: '10rem' }} body={balanceBodyTemplate} filter filterElement={balanceFilterTemplate} />\n                        <Column field=\"status\" header=\"Status\" filterMenuStyle={{ width: '14rem' }} style={{ minWidth: '12rem' }} body={statusBodyTemplate} filter filterElement={statusFilterTemplate} />\n                        <Column field=\"activity\" header=\"Activity\" showFilterMatchModes={false} style={{ minWidth: '12rem' }} body={activityBodyTemplate} filter filterElement={activityFilterTemplate} />\n                        <Column field=\"verified\" header=\"Verified\" dataType=\"boolean\" bodyClassName=\"text-center\" style={{ minWidth: '8rem' }} body={verifiedBodyTemplate} filter filterElement={verifiedFilterTemplate} />\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Frozen Columns</h5>\n                    <ToggleButton checked={idFrozen} onChange={(e) => setIdFrozen(e.value)} onIcon=\"pi pi-lock\" offIcon=\"pi pi-lock-open\" onLabel=\"Unfreeze Id\" offLabel=\"Freeze Id\" style={{ width: '10rem' }} />\n\n                    <DataTable value={customers2} scrollable scrollHeight=\"400px\" loading={loading2} className=\"mt-3\">\n                        <Column field=\"name\" header=\"Name\" style={{ flexGrow: 1, flexBasis: '160px' }} frozen className=\"font-bold\"></Column>\n                        <Column field=\"id\" header=\"Id\" style={{ flexGrow: 1, flexBasis: '100px' }} frozen={idFrozen} alignFrozen=\"left\" bodyClassName={classNames({ 'font-bold': idFrozen })}></Column>\n                        <Column field=\"country.name\" header=\"Country\" style={{ flexGrow: 1, flexBasis: '200px' }} body={countryBodyTemplate}></Column>\n                        <Column field=\"date\" header=\"Date\" style={{ flexGrow: 1, flexBasis: '200px' }} body={dateBodyTemplate}></Column>\n                        <Column field=\"company\" header=\"Company\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\n                        <Column field=\"status\" header=\"Status\" style={{ flexGrow: 1, flexBasis: '200px' }} body={statusBodyTemplate}></Column>\n                        <Column field=\"activity\" header=\"Activity\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\n                        <Column field=\"representative.name\" header=\"Representative\" style={{ flexGrow: 1, flexBasis: '200px' }} body={representativeBodyTemplate}></Column>\n                        <Column field=\"balance\" header=\"Balance\" body={balanceTemplate} frozen style={{ flexGrow: 1, flexBasis: '120px' }} className=\"font-bold\" alignFrozen=\"right\"></Column>\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Row Expand</h5>\n                    <DataTable value={products} expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)} responsiveLayout=\"scroll\" rowExpansionTemplate={rowExpansionTemplate} dataKey=\"id\" header={header}>\n                        <Column expander style={{ width: '3em' }} />\n                        <Column field=\"name\" header=\"Name\" sortable />\n                        <Column header=\"Image\" body={imageBodyTemplate} />\n                        <Column field=\"price\" header=\"Price\" sortable body={priceBodyTemplate} />\n                        <Column field=\"category\" header=\"Category\" sortable />\n                        <Column field=\"rating\" header=\"Reviews\" sortable body={ratingBodyTemplate} />\n                        <Column field=\"inventoryStatus\" header=\"Status\" sortable body={statusBodyTemplate2} />\n                    </DataTable>\n                </div>\n            </div>\n\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <h5>Subheader Grouping</h5>\n                    <DataTable\n                        value={customers3}\n                        rowGroupMode=\"subheader\"\n                        groupRowsBy=\"representative.name\"\n                        sortMode=\"single\"\n                        sortField=\"representative.name\"\n                        sortOrder={1}\n                        scrollable\n                        scrollHeight=\"400px\"\n                        rowGroupHeaderTemplate={headerTemplate}\n                        rowGroupFooterTemplate={footerTemplate}\n                        responsiveLayout=\"scroll\"\n                    >\n                        <Column field=\"name\" header=\"Name\" style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"country\" header=\"Country\" body={countryBodyTemplate} style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"company\" header=\"Company\" style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"status\" header=\"Status\" body={statusBodyTemplate} style={{ minWidth: '200px' }}></Column>\n                        <Column field=\"date\" header=\"Date\" style={{ minWidth: '200px' }}></Column>\n                    </DataTable>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TableDemo;\n"
        }
    ]
}