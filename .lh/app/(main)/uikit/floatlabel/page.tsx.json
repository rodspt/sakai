{
    "sourceFile": "app/(main)/uikit/floatlabel/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1706140575834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706140583490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,11 @@\n         { name: \"Paris\", code: \"PRS\" },\n     ];\n \n     useEffect(() => {\n-        CountryService.getCountries().then((countries) => {\n+       /* CountryService.getCountries().then((countries) => {\n             setCountries(countries);\n-        });\n+        });*/\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         const filtered = [];\n"
                },
                {
                    "date": 1706146377026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import { InputText } from \"primereact/inputtext\";\n import { InputTextarea } from \"primereact/inputtextarea\";\n import { MultiSelect } from \"primereact/multiselect\";\n import { useEffect, useState } from \"react\";\n-//import { CountryService } from \"../../../../demo/service/CountryService\";\n+//OLDD import { CountryService } from \"../../../../demo/service/CountryService\";\n \n const FloatLabelDemo = () => {\n     const [countries, setCountries] = useState<Demo.Country[]>([]);\n     const [filteredCountries, setFilteredCountries] = useState<Demo.Country[]>(\n"
                },
                {
                    "date": 1706146435142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,8 +44,21 @@\n     useEffect(() => {\n        /* CountryService.getCountries().then((countries) => {\n             setCountries(countries);\n         });*/\n+        const myCountries: Demo.Country[] = [\n+            { name: \"Australia\", code: \"AU\" },\n+            { name: \"Brazil\", code: \"BR\" },\n+            { name: \"China\", code: \"CN\" },\n+            { name: \"Egypt\", code: \"EG\" },\n+            { name: \"France\", code: \"FR\" },\n+            { name: \"Germany\", code: \"DE\" },\n+            { name: \"India\", code: \"IN\" },\n+            { name: \"Japan\", code: \"JP\" },\n+            { name: \"Spain\", code: \"ES\" },\n+            { name: \"United States\", code: \"US\" },\n+            setCountries(myCountries)\n+        ];\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         const filtered = [];\n"
                },
                {
                    "date": 1706146503735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     useEffect(() => {\n        /* CountryService.getCountries().then((countries) => {\n             setCountries(countries);\n         });*/\n-        const myCountries: Demo.Country[] = [\n+        const myCountriesx: Demo.Country[] = [\n             { name: \"Australia\", code: \"AU\" },\n             { name: \"Brazil\", code: \"BR\" },\n             { name: \"China\", code: \"CN\" },\n             { name: \"Egypt\", code: \"EG\" },\n@@ -55,9 +55,9 @@\n             { name: \"India\", code: \"IN\" },\n             { name: \"Japan\", code: \"JP\" },\n             { name: \"Spain\", code: \"ES\" },\n             { name: \"United States\", code: \"US\" },\n-            setCountries(myCountries)\n+            setCountries(myCountriesx)\n         ];\n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n"
                },
                {
                    "date": 1706146516407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,11 +54,12 @@\n             { name: \"Germany\", code: \"DE\" },\n             { name: \"India\", code: \"IN\" },\n             { name: \"Japan\", code: \"JP\" },\n             { name: \"Spain\", code: \"ES\" },\n-            { name: \"United States\", code: \"US\" },\n+            { name: \"United States\", code: \"US\" }\n+        ];\n             setCountries(myCountriesx)\n-        ];\n+       \n     }, []);\n \n     const searchCountry = (event: AutoCompleteCompleteEvent) => {\n         const filtered = [];\n"
                }
            ],
            "date": 1706140575834,
            "name": "Commit-0",
            "content": "\"use client\";\nimport type { Demo } from \"@/types\";\nimport {\n    AutoComplete,\n    AutoCompleteCompleteEvent,\n} from \"primereact/autocomplete\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Chips } from \"primereact/chips\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { useEffect, useState } from \"react\";\n//import { CountryService } from \"../../../../demo/service/CountryService\";\n\nconst FloatLabelDemo = () => {\n    const [countries, setCountries] = useState<Demo.Country[]>([]);\n    const [filteredCountries, setFilteredCountries] = useState<Demo.Country[]>(\n        []\n    );\n    const [value1, setValue1] = useState(\"\");\n    const [value2, setValue2] = useState(null);\n    const [value3, setValue3] = useState(\"\");\n    const [value4, setValue4] = useState(\"\");\n    const [value5, setValue5] = useState<any>(null);\n    const [value6, setValue6] = useState<any[]>([]);\n    const [value7, setValue7] = useState(\"\");\n    const [value8, setValue8] = useState<number | null>(null);\n    const [value9, setValue9] = useState(\"\");\n    const [value10, setValue10] = useState(null);\n    const [value11, setValue11] = useState(null);\n    const [value12, setValue12] = useState(\"\");\n\n    const cities = [\n        { name: \"New York\", code: \"NY\" },\n        { name: \"Rome\", code: \"RM\" },\n        { name: \"London\", code: \"LDN\" },\n        { name: \"Istanbul\", code: \"IST\" },\n        { name: \"Paris\", code: \"PRS\" },\n    ];\n\n    useEffect(() => {\n        CountryService.getCountries().then((countries) => {\n            setCountries(countries);\n        });\n    }, []);\n\n    const searchCountry = (event: AutoCompleteCompleteEvent) => {\n        const filtered = [];\n        const query = event.query;\n        for (let i = 0; i < countries.length; i++) {\n            const country = countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                filtered.push(country);\n            }\n        }\n        setFilteredCountries(filtered);\n    };\n\n    return (\n        <div className=\"card\">\n            <h5>Float Label</h5>\n            <p>\n                All input text components support floating labels by adding (\n                <mark>.p-float-label</mark>) to wrapper class.\n            </p>\n            <div className=\"grid p-fluid mt-3\">\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputText\n                            type=\"text\"\n                            id=\"inputtext\"\n                            value={value1}\n                            onChange={(e) => setValue1(e.target.value)}\n                        />\n                        <label htmlFor=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <AutoComplete\n                            id=\"autocomplete\"\n                            value={value2}\n                            onChange={(e) => setValue2(e.value)}\n                            suggestions={filteredCountries}\n                            completeMethod={searchCountry}\n                            field=\"name\"\n                        ></AutoComplete>\n                        <label htmlFor=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label p-input-icon-left\">\n                        <i className=\"pi pi-search\" />\n                        <InputText\n                            id=\"lefticon\"\n                            value={value3}\n                            onChange={(e) => setValue3(e.target.value)}\n                        />\n                        <label htmlFor=\"lefticon\">Left Icon</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label p-input-icon-right\">\n                        <i className=\"pi pi-spin pi-spinner\" />\n                        <InputText\n                            id=\"righticon\"\n                            value={value4}\n                            onChange={(e) => setValue4(e.target.value)}\n                        />\n                        <label htmlFor=\"righticon\">Right Icon</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <Calendar\n                            inputId=\"calendar\"\n                            value={value5}\n                            onChange={(e) => setValue5(e.value ?? \"\")}\n                        ></Calendar>\n                        <label htmlFor=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <Chips\n                            inputId=\"chips\"\n                            value={value6}\n                            onChange={(e) => setValue6(e.value ?? [])}\n                        ></Chips>\n                        <label htmlFor=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputMask\n                            id=\"inputmask\"\n                            mask=\"99/99/9999\"\n                            value={value7}\n                            onChange={(e) => setValue7(e.value ?? \"\")}\n                        ></InputMask>\n                        <label htmlFor=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputNumber\n                            id=\"inputnumber\"\n                            value={value8}\n                            onValueChange={(e) =>\n                                setValue8(e.target.value ?? null)\n                            }\n                        ></InputNumber>\n                        <label htmlFor=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <div className=\"p-inputgroup\">\n                        <span className=\"p-inputgroup-addon\">\n                            <i className=\"pi pi-user\"></i>\n                        </span>\n                        <span className=\"p-float-label\">\n                            <InputText\n                                type=\"text\"\n                                id=\"inputgroup\"\n                                value={value9}\n                                onChange={(e) => setValue9(e.target.value)}\n                            />\n                            <label htmlFor=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <Dropdown\n                            id=\"dropdown\"\n                            options={cities}\n                            value={value10}\n                            onChange={(e) => setValue10(e.value)}\n                            optionLabel=\"name\"\n                        ></Dropdown>\n                        <label htmlFor=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <MultiSelect\n                            id=\"multiselect\"\n                            options={cities}\n                            value={value11}\n                            onChange={(e) => setValue11(e.value)}\n                            optionLabel=\"name\"\n                        ></MultiSelect>\n                        <label htmlFor=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div className=\"field col-12 md:col-4\">\n                    <span className=\"p-float-label\">\n                        <InputTextarea\n                            id=\"textarea\"\n                            rows={3}\n                            value={value12}\n                            onChange={(e) => setValue12(e.target.value)}\n                        ></InputTextarea>\n                        <label htmlFor=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FloatLabelDemo;\n"
        }
    ]
}