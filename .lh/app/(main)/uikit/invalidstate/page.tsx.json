{
    "sourceFile": "app/(main)/uikit/invalidstate/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1706140620526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1706140620526,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport type { Demo } from \"@/types\";\nimport {\n    AutoComplete,\n    AutoCompleteCompleteEvent,\n} from \"primereact/autocomplete\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Chips } from \"primereact/chips\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { Password } from \"primereact/password\";\nimport { useEffect, useState } from \"react\";\n//import { CountryService } from \"../../../../demo/service/CountryService\";\n\nconst InvalidStateDemo = () => {\n    const [countries, setCountries] = useState<Demo.Country[]>([]);\n    const [filteredCountries, setFilteredCountries] = useState<Demo.Country[]>(\n        []\n    );\n    const [value1, setValue1] = useState(\"\");\n    const [value2, setValue2] = useState(null);\n    const [value3, setValue3] = useState(null);\n    const [value4, setValue4] = useState<any[]>([]);\n    const [value5, setValue5] = useState(\"\");\n    const [value6, setValue6] = useState(\"\");\n    const [value7, setValue7] = useState(0);\n    const [value8, setValue8] = useState(null);\n    const [value9, setValue9] = useState(null);\n    const [value10, setValue10] = useState(\"\");\n\n    const cities = [\n        { name: \"New York\", code: \"NY\" },\n        { name: \"Rome\", code: \"RM\" },\n        { name: \"London\", code: \"LDN\" },\n        { name: \"Istanbul\", code: \"IST\" },\n        { name: \"Paris\", code: \"PRS\" },\n    ];\n\n    useEffect(() => {\n       /* CountryService.getCountries().then((countries) => {\n            setCountries(countries);\n        }); */\n    }, []);\n\n    const searchCountry = (event: AutoCompleteCompleteEvent) => {\n        // in a real application, make a request to a remote url with the query and\n        // return filtered results, for demo we filter at client side\n        const filtered = [];\n        const query = event.query;\n        for (let i = 0; i < countries.length; i++) {\n            const country = countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) === 0) {\n                filtered.push(country);\n            }\n        }\n        setFilteredCountries(filtered);\n    };\n\n    const onCalendarChange = (e: any) => {\n        setValue3(e.value!);\n    };\n\n    return (\n        <div className=\"card\">\n            <h5>Invalid State</h5>\n            <div className=\"grid p-fluid\">\n                <div className=\"col-12 md:col-6\">\n                    <div className=\"field mt-3\">\n                        <label htmlFor=\"inputtext\">InputText</label>\n                        <InputText\n                            type=\"text\"\n                            id=\"inputtext\"\n                            value={value1}\n                            onChange={(e) => setValue1(e.target.value)}\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"autocomplete\">AutoComplete</label>\n                        <AutoComplete\n                            id=\"autocomplete\"\n                            value={value2}\n                            onChange={(e) => setValue2(e.value)}\n                            suggestions={filteredCountries}\n                            completeMethod={searchCountry}\n                            field=\"name\"\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"calendar\">Calendar</label>\n                        <Calendar\n                            inputId=\"calendar\"\n                            value={value3}\n                            onChange={onCalendarChange}\n                            className=\"p-invalid\"\n                            showIcon\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"chips\">Chips</label>\n                        <Chips\n                            inputId=\"chips\"\n                            value={value4}\n                            onChange={(e) => setValue4(e.value ?? [])}\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <Password\n                            inputId=\"password\"\n                            value={value5}\n                            onChange={(e) => setValue5(e.target.value)}\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-12 md:col-6\">\n                    <div className=\"field mt-3\">\n                        <label htmlFor=\"inputmask\">InputMask</label>\n                        <InputMask\n                            id=\"inputmask\"\n                            mask=\"99/99/9999\"\n                            value={value6}\n                            onChange={(e) => setValue6(e.value ?? \"\")}\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"inputnumber\">InputNumber</label>\n                        <InputNumber\n                            id=\"inputnumber\"\n                            value={value7}\n                            onValueChange={(e) =>\n                                setValue7(e.target.value ?? 0)\n                            }\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"dropdown\">Dropdown</label>\n                        <Dropdown\n                            id=\"dropdown\"\n                            options={cities}\n                            value={value8}\n                            onChange={(e) => setValue8(e.value)}\n                            optionLabel=\"name\"\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"multiselect\">MultiSelect</label>\n                        <MultiSelect\n                            id=\"multiselect\"\n                            options={cities}\n                            value={value9}\n                            onChange={(e) => setValue9(e.value)}\n                            optionLabel=\"name\"\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                    <div className=\"field\">\n                        <label htmlFor=\"textarea\">Textarea</label>\n                        <InputTextarea\n                            id=\"textarea\"\n                            rows={3}\n                            cols={30}\n                            value={value10}\n                            onChange={(e) => setValue10(e.target.value)}\n                            className=\"p-invalid\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InvalidStateDemo;\n"
        }
    ]
}