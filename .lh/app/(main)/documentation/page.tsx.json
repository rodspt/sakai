{
    "sourceFile": "app/(main)/documentation/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1706140408284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1706140408284,
            "name": "Commit-0",
            "content": "/* eslint-disable @next/next/no-sync-scripts */\nimport React from 'react';\n\nconst Documentation = () => {\n    return (\n        <>\n            <div className=\"grid\">\n                <div className=\"col-12\">\n                    <div className=\"card docs\">\n                        <h4>Current Version</h4>\n                        <p>Next v13, React v18, Typescript with PrimeReact v10</p>\n\n                        <h5>Getting Started</h5>\n                        <p>\n                            Sakai is an application template for React based on the popular{' '}\n                            <a href=\"https://nextjs.org/\" className=\"font-medium hover:underline text-primary\">\n                                Next.js\n                            </a>{' '}\n                            framework with new{' '}\n                            <a href=\"https://nextjs.org/docs/app\" className=\"font-medium hover:underline text-primary\">\n                                App Router\n                            </a>\n                            . To get started, clone the{' '}\n                            <a href=\"https://github.com/primefaces/sakai-react\" className=\"font-medium hover:underline text-primary\">\n                                repository\n                            </a>{' '}\n                            from GitHub and install the dependencies with npm or yarn.\n                        </p>\n                        <pre className=\"app-code\">\n                            <code>{`\"npm install\" or \"yarn\"`}</code>\n                        </pre>\n\n                        <p>\n                            Next step is running the application using the start script and navigate to <b>http://localhost:3000/</b> to view the application. That is it, you may now start with the development of your application using the Sakai\n                            template.\n                        </p>\n\n                        <pre className=\"app-code\">\n                            <code>{`\"npm run dev\" or \"yarn dev\"`}</code>\n                        </pre>\n\n                        <h5>Dependencies</h5>\n                        <p>Dependencies of Sakai are listed below and needs to be defined at package.json.</p>\n\n                        <pre className=\"app-code\">\n                            <code>{`\"primereact\": \"^9.6.2\",                    //required: PrimeReact components\n\"primeicons\": \"^6.0.1\",                    //required: Icons\n\"primeflex\": \"^3.3.0\",                     //required: Utility CSS classes\n`}</code>\n                        </pre>\n\n                        <h5>Structure</h5>\n                        <p>Sakai consist of a couple of folders where demos and core layout have been separated.</p>\n                        <p>\n                            There are two{' '}\n                            <a href=\"https://nextjs.org/docs/app/building-your-application/routing/route-groups\" className=\"font-medium hover:underline text-primary\">\n                                route groups\n                            </a>{' '}\n                            under the app folder; <span className=\"text-primary font-medium\">{`(main)`}</span> represents the pages that reside in the main dashboard layout whereas <span className=\"text-primary font-medium\">{`(full-page)`}</span>{' '}\n                            groups the pages with full page content such as landing page or a login page.\n                        </p>\n                        <ul className=\"line-height-3\">\n                            <li>\n                                <span className=\"text-primary font-medium\">layout/</span>: Main layout files\n                            </li>\n                            <li>\n                                <span className=\"text-primary font-medium\">demo/</span>: Contains demo related utilities and helpers\n                            </li>\n                            <li>\n                                <span className=\"text-primary font-medium\">app/</span>: Demo pages\n                            </li>\n                            <li>\n                                <span className=\"text-primary font-medium\">public/demo</span>: Assets used in demos\n                            </li>\n                            <li>\n                                <span className=\"text-primary font-medium\">public/layout</span>: Assets used in layout such as a logo\n                            </li>\n                            <li>\n                                <span className=\"text-primary font-medium\">styles/demo</span>: Styles used in demos only\n                            </li>\n                            <li>\n                                <span className=\"text-primary font-medium\">styles/layout</span>: SCSS files of the core layout\n                            </li>\n                        </ul>\n                        <h5>Route Groups</h5>\n                        <p>\n                            Root Layout is the main of the application and it is defined at <span className=\"text-primary font-medium\">app/layout.tsx</span> file. It contains the style imports and layout context provider.\n                        </p>\n                        <pre className=\"app-code\">\n                            <code>\n                                {`\"use client\"\nimport { LayoutProvider } from \"./layout/context/layoutcontext\";\nimport { PrimeReactProvider } from \"primereact/api\";\nimport \"primereact/resources/primereact.css\";\n...\nimport \"../styles/layout/layout.scss\";\nimport \"../styles/demo/Demos.scss\";\n\ninterface RootLayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function RootLayout({ children }: RootLayoutProps) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head>\n        <link\n          id=\"theme-css\"\n          href={\\`/themes/lara-light-indigo/theme.css\\`}\n          rel=\"stylesheet\"\n        ></link>\n      </head>\n      <body>\n        <PrimeReactProvider>\n            <LayoutProvider>{children}</LayoutProvider>\n        </PrimeReactProvider>\n      </body>\n    </html>\n  );\n}\n\n`}\n                            </code>\n                        </pre>\n                        <p>\n                            The pages that are using the layout elements need to be defined under the <span className=\"text-primary font-medium\">app/{'(main)'}/</span> folder. Those pages use the{' '}\n                            <span className=\"text-primary font-medium\">app/{'(main)'}/layout.tsx</span> as the root layout.\n                        </p>\n                        <pre className=\"app-code\">\n                            <code>\n                                {`import { Metadata } from 'next';\nimport Layout from \"../../layout/layout\";\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n}\n\nexport const metadata: Metadata = {\n    title: \"Sakai by PrimeReact | Free Admin Template for Next.js\",\n    ...\n  };\n\nexport default function MainLayout({ children }: MainLayoutProps) {\n  return <Layout>{children}</Layout>;\n}\n`}\n                            </code>\n                        </pre>\n                        <p>\n                            Only the pages that are using config sidebar wihout layout elements need to be defined under the <span className=\"text-primary font-medium\">app/{'(full-page)'}/</span> folder. Those pages use the{' '}\n                            <span className=\"text-primary font-medium\">app/{'(full-page)'}/layout.tsx</span> as the root layout.\n                        </p>\n                        <pre className=\"app-code\">\n                            <code>\n                                {`import { Metadata } from 'next';\nimport AppConfig from \"../../layout/AppConfig\";\nimport React from \"react\";\n\ninterface FullPageLayoutProps {\n  children: React.ReactNode;\n}\n\nexport const metadata: Metadata = {\n    title: \"Sakai by PrimeReact | Free Admin Template for Next.js\",\n    ...\n  };\n\nexport default function FullPageLayout({ children }: FullPageLayoutProps) {\n  return (\n    <React.Fragment>\n      {children}\n    </React.Fragment>\n  );\n}\n`}\n                            </code>\n                        </pre>\n                        <h5>Default Configuration</h5>\n                        <p>\n                            Initial layout configuration can be defined at the <span className=\"text-primary font-medium\">layout/context/layoutcontext.js</span> file, this step is optional and only necessary when customizing the defaults.\n                        </p>\n\n                        <pre className=\"app-code\">\n                            <code>\n                                {`\"use client\";\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nexport const LayoutContext = React.createContext();\n\nexport const LayoutProvider = (props) => {\n    const [layoutConfig, setLayoutConfig] = useState({\n        ripple: false,                          //toggles ripple on and off\n        inputStyle: 'outlined',                 //default style for input elements\n        menuMode: 'static',                     //layout mode of the menu, valid values are \"static\" or \"overlay\"\n        colorScheme: 'light',                   //color scheme of the template, valid values are \"light\", \"dim\" and \"dark\"\n        theme: 'lara-light-indigo',             //default component theme for PrimeReact\n        scale: 14                               //size of the body font size to scale the whole application\n    });\n}`}\n                            </code>\n                        </pre>\n\n                        <h5>Menu</h5>\n                        <p>\n                            Main menu is defined at <span className=\"text-primary font-medium\">AppMenu.js</span> file based on{' '}\n                            <a href=\"https://www.primefaces.org/primereact/menumodel/\" className=\"font-medium hover:underline text-primary\">\n                                MenuModel API\n                            </a>\n                            .\n                        </p>\n\n                        <h5>PrimeReact Theme</h5>\n                        <p>\n                            Sakai theming is based on the PrimeReact theme being used.\n                        </p>\n\n                        <h5>SASS Variables</h5>\n                        <p>\n                            In case you&apos;d like to customize the main layout variables, open <b>_variables.scss</b> file under layout folder. Saving the changes will be reflected instantly at your browser.\n                        </p>\n\n                        <h6>layout/_variables.scss</h6>\n                        <pre className=\"app-code\" lang=\"scss\">\n                            <code>\n                                {`\n/* General */\n$scale:14px;                    /* initial font size */ \n$borderRadius:12px;             /* border radius of layout element e.g. card, sidebar */ \n$transitionDuration:.2s;        /* transition duration of layout elements e.g. sidebar */ \n`}\n                            </code>\n                        </pre>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Documentation;\n"
        }
    ]
}