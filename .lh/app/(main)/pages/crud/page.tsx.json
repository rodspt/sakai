{
    "sourceFile": "app/(main)/pages/crud/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 81,
            "patches": [
                {
                    "date": 1706141055755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706141884361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,35 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n+        setProduct([\n+                {\n+                    \"id\": \"1000\",\n+                    \"code\": \"f230fh0g3\",\n+                    \"name\": \"Bamboo Watch\",\n+                    \"description\": \"Product Description\",\n+                    \"image\": \"bamboo-watch.jpg\",\n+                    \"price\": 65,\n+                    \"date\": \"09/13/2022\",\n+                    \"category\": \"Accessories\",\n+                    \"quantity\": 24,\n+                    \"inventoryStatus\": \"INSTOCK\",\n+                    \"rating\": 5\n+                },\n+                {\n+                    \"id\": \"1001\",\n+                    \"code\": \"nvklal433\",\n+                    \"name\": \"Black Watch\",\n+                    \"description\": \"Product Description\",\n+                    \"image\": \"black-watch.jpg\",\n+                    \"price\": 72,\n+                    \"date\": \"09/12/2022\",\n+                    \"category\": \"Accessories\",\n+                    \"quantity\": 61,\n+                    \"inventoryStatus\": \"OUTOFSTOCK\",\n+                    \"rating\": 4\n+                }]);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706141961967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,35 +42,36 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-        setProduct([\n-                {\n-                    \"id\": \"1000\",\n-                    \"code\": \"f230fh0g3\",\n-                    \"name\": \"Bamboo Watch\",\n-                    \"description\": \"Product Description\",\n-                    \"image\": \"bamboo-watch.jpg\",\n-                    \"price\": 65,\n-                    \"date\": \"09/13/2022\",\n-                    \"category\": \"Accessories\",\n-                    \"quantity\": 24,\n-                    \"inventoryStatus\": \"INSTOCK\",\n-                    \"rating\": 5\n-                },\n-                {\n-                    \"id\": \"1001\",\n-                    \"code\": \"nvklal433\",\n-                    \"name\": \"Black Watch\",\n-                    \"description\": \"Product Description\",\n-                    \"image\": \"black-watch.jpg\",\n-                    \"price\": 72,\n-                    \"date\": \"09/12/2022\",\n-                    \"category\": \"Accessories\",\n-                    \"quantity\": 61,\n-                    \"inventoryStatus\": \"OUTOFSTOCK\",\n-                    \"rating\": 4\n-                }]);\n+        const dados: any = [\n+            {\n+                \"id\": \"1000\",\n+                \"code\": \"f230fh0g3\",\n+                \"name\": \"Bamboo Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"bamboo-watch.jpg\",\n+                \"price\": 65,\n+                \"date\": \"09/13/2022\",\n+                \"category\": \"Accessories\",\n+                \"quantity\": 24,\n+                \"inventoryStatus\": \"INSTOCK\",\n+                \"rating\": 5\n+            },\n+            {\n+                \"id\": \"1001\",\n+                \"code\": \"nvklal433\",\n+                \"name\": \"Black Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"black-watch.jpg\",\n+                \"price\": 72,\n+                \"date\": \"09/12/2022\",\n+                \"category\": \"Accessories\",\n+                \"quantity\": 61,\n+                \"inventoryStatus\": \"OUTOFSTOCK\",\n+                \"rating\": 4\n+            }];\n+        setProduct(dados);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706142033028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,12 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-        const dados: any = [\n+\n+      \n+\n+        const dados: Array<Demo.Product> = [\n             {\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"Bamboo Watch\",\n"
                },
                {
                    "date": 1706142048595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,10 @@\n                 \"quantity\": 61,\n                 \"inventoryStatus\": \"OUTOFSTOCK\",\n                 \"rating\": 4\n             }];\n+\n+            console.log(dados);\n         setProduct(dados);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n"
                },
                {
                    "date": 1706142106232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,21 +58,8 @@\n                 \"category\": \"Accessories\",\n                 \"quantity\": 24,\n                 \"inventoryStatus\": \"INSTOCK\",\n                 \"rating\": 5\n-            },\n-            {\n-                \"id\": \"1001\",\n-                \"code\": \"nvklal433\",\n-                \"name\": \"Black Watch\",\n-                \"description\": \"Product Description\",\n-                \"image\": \"black-watch.jpg\",\n-                \"price\": 72,\n-                \"date\": \"09/12/2022\",\n-                \"category\": \"Accessories\",\n-                \"quantity\": 61,\n-                \"inventoryStatus\": \"OUTOFSTOCK\",\n-                \"rating\": 4\n             }];\n \n             console.log(dados);\n         setProduct(dados);\n"
                },
                {
                    "date": 1706142149932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,19 +47,19 @@\n       \n \n         const dados: Array<Demo.Product> = [\n             {\n-                \"id\": \"1000\",\n-                \"code\": \"f230fh0g3\",\n-                \"name\": \"Bamboo Watch\",\n-                \"description\": \"Product Description\",\n-                \"image\": \"bamboo-watch.jpg\",\n-                \"price\": 65,\n-                \"date\": \"09/13/2022\",\n-                \"category\": \"Accessories\",\n-                \"quantity\": 24,\n-                \"inventoryStatus\": \"INSTOCK\",\n-                \"rating\": 5\n+                id: \"1000\",\n+                code: \"f230fh0g3\",\n+                name: \"Bamboo Watch\",\n+                description: \"Product Description\",\n+                image: \"bamboo-watch.jpg\",\n+                price: 65,\n+                date: \"09/13/2022\",\n+                category: \"Accessories\",\n+                quantity: 24,\n+                inventoryStatus: \"INSTOCK\",\n+                rating: 5\n             }];\n \n             console.log(dados);\n         setProduct(dados);\n"
                },
                {
                    "date": 1706142341455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,24 +44,37 @@\n \n     useEffect(() => {\n \n       \n-\n-        const dados: Array<Demo.Product> = [\n+        const dados = \n+        [\n             {\n-                id: \"1000\",\n-                code: \"f230fh0g3\",\n-                name: \"Bamboo Watch\",\n-                description: \"Product Description\",\n-                image: \"bamboo-watch.jpg\",\n-                price: 65,\n-                date: \"09/13/2022\",\n-                category: \"Accessories\",\n-                quantity: 24,\n-                inventoryStatus: \"INSTOCK\",\n-                rating: 5\n-            }];\n-\n+                \"id\": \"1000\",\n+                \"code\": \"f230fh0g3\",\n+                \"name\": \"Bamboo Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"bamboo-watch.jpg\",\n+                \"price\": 65,\n+                \"date\": \"09/13/2022\",\n+                \"category\": \"Accessories\",\n+                \"quantity\": 24,\n+                \"inventoryStatus\": \"INSTOCK\",\n+                \"rating\": 5\n+            },\n+            {\n+                \"id\": \"1001\",\n+                \"code\": \"nvklal433\",\n+                \"name\": \"Black Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"black-watch.jpg\",\n+                \"price\": 72,\n+                \"date\": \"09/12/2022\",\n+                \"category\": \"Accessories\",\n+                \"quantity\": 61,\n+                \"inventoryStatus\": \"OUTOFSTOCK\",\n+                \"rating\": 4\n+            }\n+        ];\n             console.log(dados);\n         setProduct(dados);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n"
                },
                {
                    "date": 1706142430055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                 \"rating\": 4\n             }\n         ];\n             console.log(dados);\n-        setProduct(dados);\n+            setProducts(dados);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706142447254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                 \"rating\": 4\n             }\n         ];\n             console.log(dados);\n-            setProducts(dados);\n+            setProducts(dados as any);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706142569631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,8 @@\n                 \"inventoryStatus\": \"OUTOFSTOCK\",\n                 \"rating\": 4\n             }\n         ];\n-            console.log(dados);\n             setProducts(dados as any);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n"
                },
                {
                    "date": 1706142586494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,10 @@\n import { Toast } from 'primereact/toast';\n import { Toolbar } from 'primereact/toolbar';\n import { classNames } from 'primereact/utils';\n import React, { useEffect, useRef, useState } from 'react';\n+import { Demo } from '@/types';\n //import { ProductService } from '../../../../demo/service/ProductService';\n-import { Demo } from '@/types';\n \n /* @todo Used 'as any' for types here. Will fix in next version due to onSelectionChange event type issue. */\n const Crud = () => {\n     let emptyProduct: Demo.Product = {\n"
                },
                {
                    "date": 1706143269210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import { Toast } from 'primereact/toast';\n import { Toolbar } from 'primereact/toolbar';\n import { classNames } from 'primereact/utils';\n import React, { useEffect, useRef, useState } from 'react';\n-import { Demo } from '@/types';\n+import { Demo, ProductData } from '@/types';\n //import { ProductService } from '../../../../demo/service/ProductService';\n \n /* @todo Used 'as any' for types here. Will fix in next version due to onSelectionChange event type issue. */\n const Crud = () => {\n@@ -42,40 +42,9 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-\n-      \n-        const dados = \n-        [\n-            {\n-                \"id\": \"1000\",\n-                \"code\": \"f230fh0g3\",\n-                \"name\": \"Bamboo Watch\",\n-                \"description\": \"Product Description\",\n-                \"image\": \"bamboo-watch.jpg\",\n-                \"price\": 65,\n-                \"date\": \"09/13/2022\",\n-                \"category\": \"Accessories\",\n-                \"quantity\": 24,\n-                \"inventoryStatus\": \"INSTOCK\",\n-                \"rating\": 5\n-            },\n-            {\n-                \"id\": \"1001\",\n-                \"code\": \"nvklal433\",\n-                \"name\": \"Black Watch\",\n-                \"description\": \"Product Description\",\n-                \"image\": \"black-watch.jpg\",\n-                \"price\": 72,\n-                \"date\": \"09/12/2022\",\n-                \"category\": \"Accessories\",\n-                \"quantity\": 61,\n-                \"inventoryStatus\": \"OUTOFSTOCK\",\n-                \"rating\": 4\n-            }\n-        ];\n-            setProducts(dados as any);\n+            setProducts(ProductData);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706143317134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n import { Toast } from 'primereact/toast';\n import { Toolbar } from 'primereact/toolbar';\n import { classNames } from 'primereact/utils';\n import React, { useEffect, useRef, useState } from 'react';\n-import { Demo, ProductData } from '@/types';\n+import { Demo } from '@/types';\n //import { ProductService } from '../../../../demo/service/ProductService';\n \n /* @todo Used 'as any' for types here. Will fix in next version due to onSelectionChange event type issue. */\n const Crud = () => {\n@@ -42,9 +42,9 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-            setProducts(ProductData);\n+            setProducts(ProductData as any);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706143378817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n import { Toolbar } from 'primereact/toolbar';\n import { classNames } from 'primereact/utils';\n import React, { useEffect, useRef, useState } from 'react';\n import { Demo } from '@/types';\n+import { ProductData } from \"@/types/data\";\n //import { ProductService } from '../../../../demo/service/ProductService';\n \n /* @todo Used 'as any' for types here. Will fix in next version due to onSelectionChange event type issue. */\n const Crud = () => {\n"
                },
                {
                    "date": 1706143384539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,11 @@\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n-        return value.toLocaleString('en-US', {\n+        return value.toLocaleString('pt-BR', {\n             style: 'currency',\n-            currency: 'USD'\n+            currency: 'BRL'\n         });\n     };\n \n     const openNew = () => {\n"
                },
                {
                    "date": 1706143566421,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,37 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-            setProducts(ProductData as any);\n+        const produtos = [\n+            {\n+                \"id\": \"1000\",\n+                \"code\": \"f230fh0g3\",\n+                \"name\": \"Bamboo Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"bamboo-watch.jpg\",\n+                \"price\": 65,\n+                \"date\": \"09/13/2022\",\n+                \"category\": \"Accessories\",\n+                \"quantity\": 24,\n+                \"inventoryStatus\": \"INSTOCK\",\n+                \"rating\": 5\n+            },\n+            {\n+                \"id\": \"1001\",\n+                \"code\": \"nvklal433\",\n+                \"name\": \"Black Watch\",\n+                \"description\": \"Product Description\",\n+                \"image\": \"black-watch.jpg\",\n+                \"price\": 72,\n+                \"date\": \"09/12/2022\",\n+                \"category\": \"Accessories\",\n+                \"quantity\": 61,\n+                \"inventoryStatus\": \"OUTOFSTOCK\",\n+                \"rating\": 4\n+            }\n+        ];\n+            setProducts(produtos as any);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706143587557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,9 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-        const produtos = [\n-            {\n+        const produtos = [{\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"Bamboo Watch\",\n                 \"description\": \"Product Description\",\n@@ -69,10 +68,9 @@\n                 \"category\": \"Accessories\",\n                 \"quantity\": 61,\n                 \"inventoryStatus\": \"OUTOFSTOCK\",\n                 \"rating\": 4\n-            }\n-        ];\n+            }];\n             setProducts(produtos as any);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n"
                },
                {
                    "date": 1706143608427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-        const produtos = [{\n+        const myProdutos = [{\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"Bamboo Watch\",\n                 \"description\": \"Product Description\",\n@@ -69,9 +69,9 @@\n                 \"quantity\": 61,\n                 \"inventoryStatus\": \"OUTOFSTOCK\",\n                 \"rating\": 4\n             }];\n-            setProducts(produtos as any);\n+            setProducts(myProdutos as any);\n        // ProductService.getProducts().then((data) => setProducts(data as any));\n     }, []);\n \n     const formatCurrency = (value: number) => {\n"
                },
                {
                    "date": 1706143623704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     useEffect(() => {\n         const myProdutos = [{\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n-                \"name\": \"Bamboo Watch\",\n+                \"name\": \"Notebook\",\n                 \"description\": \"Product Description\",\n                 \"image\": \"bamboo-watch.jpg\",\n                 \"price\": 65,\n                 \"date\": \"09/13/2022\",\n"
                },
                {
                    "date": 1706143686774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -262,9 +262,9 @@\n     const imageBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n                 <span className=\"p-column-title\">Image</span>\n-                <img src={`/demo/images/product/${rowData.image}`} alt={rowData.image} className=\"shadow-2\" width=\"100\" />\n+                <img src={`/layout/images/${rowData.image}`} alt={rowData.image} className=\"shadow-2\" width=\"100\" />\n             </>\n         );\n     };\n \n"
                },
                {
                    "date": 1706143713051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"Notebook\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"bamboo-watch.jpg\",\n+                \"image\": \"banner-primeblocks.png\",\n                 \"price\": 65,\n                 \"date\": \"09/13/2022\",\n                 \"category\": \"Accessories\",\n                 \"quantity\": 24,\n"
                },
                {
                    "date": 1706143730210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n                 \"id\": \"1001\",\n                 \"code\": \"nvklal433\",\n                 \"name\": \"Black Watch\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"black-watch.jpg\",\n+                \"image\": \"logo-dark.svg\",\n                 \"price\": 72,\n                 \"date\": \"09/12/2022\",\n                 \"category\": \"Accessories\",\n                 \"quantity\": 61,\n"
                },
                {
                    "date": 1706143754029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     useEffect(() => {\n         const myProdutos = [{\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n-                \"name\": \"Notebook\",\n+                \"name\": \"Livro\",\n                 \"description\": \"Product Description\",\n                 \"image\": \"banner-primeblocks.png\",\n                 \"price\": 65,\n                 \"date\": \"09/13/2022\",\n"
                },
                {
                    "date": 1706143760366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             },\n             {\n                 \"id\": \"1001\",\n                 \"code\": \"nvklal433\",\n-                \"name\": \"Black Watch\",\n+                \"name\": \"Logo\",\n                 \"description\": \"Product Description\",\n                 \"image\": \"logo-dark.svg\",\n                 \"price\": 72,\n                 \"date\": \"09/12/2022\",\n"
                },
                {
                    "date": 1706143772546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,14 +46,14 @@\n     useEffect(() => {\n         const myProdutos = [{\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n-                \"name\": \"Livro\",\n+                \"name\": \"PrimeBlocks\",\n                 \"description\": \"Product Description\",\n                 \"image\": \"banner-primeblocks.png\",\n                 \"price\": 65,\n                 \"date\": \"09/13/2022\",\n-                \"category\": \"Accessories\",\n+                \"category\": \"Livros\",\n                 \"quantity\": 24,\n                 \"inventoryStatus\": \"INSTOCK\",\n                 \"rating\": 5\n             },\n"
                },
                {
                    "date": 1706143781496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n                 \"description\": \"Product Description\",\n                 \"image\": \"logo-dark.svg\",\n                 \"price\": 72,\n                 \"date\": \"09/12/2022\",\n-                \"category\": \"Accessories\",\n+                \"category\": \"Artes\",\n                 \"quantity\": 61,\n                 \"inventoryStatus\": \"OUTOFSTOCK\",\n                 \"rating\": 4\n             }];\n"
                },
                {
                    "date": 1706143820122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,10 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n+        //OLD ProductService.getProducts().then((data) => setProducts(data as any));\n+        //NEW\n         const myProdutos = [{\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"PrimeBlocks\",\n@@ -70,9 +72,9 @@\n                 \"inventoryStatus\": \"OUTOFSTOCK\",\n                 \"rating\": 4\n             }];\n             setProducts(myProdutos as any);\n-       // ProductService.getProducts().then((data) => setProducts(data as any));\n+       \n     }, []);\n \n     const formatCurrency = (value: number) => {\n         return value.toLocaleString('pt-BR', {\n"
                },
                {
                    "date": 1706143828497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,10 @@\n     const toast = useRef<Toast>(null);\n     const dt = useRef<DataTable<any>>(null);\n \n     useEffect(() => {\n-        //OLD ProductService.getProducts().then((data) => setProducts(data as any));\n-        //NEW\n+        //OLDD ProductService.getProducts().then((data) => setProducts(data as any));\n+        //NEWW\n         const myProdutos = [{\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"PrimeBlocks\",\n"
                },
                {
                    "date": 1706143861744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,10 +113,10 @@\n \n                 _products[index] = _product;\n                 toast.current?.show({\n                     severity: 'success',\n-                    summary: 'Successful',\n-                    detail: 'Product Updated',\n+                    summary: 'Sucesso',\n+                    detail: 'Produto atualizado',\n                     life: 3000\n                 });\n             } else {\n                 _product.id = createId();\n"
                },
                {
                    "date": 1706143870795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,10 +123,10 @@\n                 _product.image = 'product-placeholder.svg';\n                 _products.push(_product);\n                 toast.current?.show({\n                     severity: 'success',\n-                    summary: 'Successful',\n-                    detail: 'Product Created',\n+                    summary: 'Sucesso',\n+                    detail: 'Produto Criado',\n                     life: 3000\n                 });\n             }\n \n"
                },
                {
                    "date": 1706143884288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,10 +152,10 @@\n         setDeleteProductDialog(false);\n         setProduct(emptyProduct);\n         toast.current?.show({\n             severity: 'success',\n-            summary: 'Successful',\n-            detail: 'Product Deleted',\n+            summary: 'Sucesso',\n+            detail: 'Produto excluído',\n             life: 3000\n         });\n     };\n \n"
                },
                {
                    "date": 1706143899557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,10 +194,10 @@\n         setDeleteProductsDialog(false);\n         setSelectedProducts(null);\n         toast.current?.show({\n             severity: 'success',\n-            summary: 'Successful',\n-            detail: 'Products Deleted',\n+            summary: 'Sucesso',\n+            detail: 'Produto excluído',\n             life: 3000\n         });\n     };\n \n"
                },
                {
                    "date": 1706143912335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,9 +226,9 @@\n     const leftToolbarTemplate = () => {\n         return (\n             <React.Fragment>\n                 <div className=\"my-2\">\n-                    <Button label=\"New\" icon=\"pi pi-plus\" severity=\"success\" className=\" mr-2\" onClick={openNew} />\n+                    <Button label=\"Novo\" icon=\"pi pi-plus\" severity=\"success\" className=\" mr-2\" onClick={openNew} />\n                     <Button label=\"Delete\" icon=\"pi pi-trash\" severity=\"danger\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !(selectedProducts as any).length} />\n                 </div>\n             </React.Fragment>\n         );\n"
                },
                {
                    "date": 1706143929442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,18 +227,18 @@\n         return (\n             <React.Fragment>\n                 <div className=\"my-2\">\n                     <Button label=\"Novo\" icon=\"pi pi-plus\" severity=\"success\" className=\" mr-2\" onClick={openNew} />\n-                    <Button label=\"Delete\" icon=\"pi pi-trash\" severity=\"danger\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !(selectedProducts as any).length} />\n+                    <Button label=\"Excluir\" icon=\"pi pi-trash\" severity=\"danger\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !(selectedProducts as any).length} />\n                 </div>\n             </React.Fragment>\n         );\n     };\n \n     const rightToolbarTemplate = () => {\n         return (\n             <React.Fragment>\n-                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} chooseLabel=\"Import\" className=\"mr-2 inline-block\" />\n+                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} chooseLabel=\"Importar\" className=\"mr-2 inline-block\" />\n                 <Button label=\"Export\" icon=\"pi pi-upload\" severity=\"help\" onClick={exportCSV} />\n             </React.Fragment>\n         );\n     };\n"
                },
                {
                    "date": 1706143939991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -237,17 +237,17 @@\n     const rightToolbarTemplate = () => {\n         return (\n             <React.Fragment>\n                 <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} chooseLabel=\"Importar\" className=\"mr-2 inline-block\" />\n-                <Button label=\"Export\" icon=\"pi pi-upload\" severity=\"help\" onClick={exportCSV} />\n+                <Button label=\"Exportar\" icon=\"pi pi-upload\" severity=\"help\" onClick={exportCSV} />\n             </React.Fragment>\n         );\n     };\n \n     const codeBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <span className=\"p-column-title\">Code</span>\n+                <span className=\"p-column-title\">Código</span>\n                 {rowData.code}\n             </>\n         );\n     };\n"
                },
                {
                    "date": 1706143951895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -254,9 +254,9 @@\n \n     const nameBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <span className=\"p-column-title\">Name</span>\n+                <span className=\"p-column-title\">Nome</span>\n                 {rowData.name}\n             </>\n         );\n     };\n"
                },
                {
                    "date": 1706143962009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -263,9 +263,9 @@\n \n     const imageBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <span className=\"p-column-title\">Image</span>\n+                <span className=\"p-column-title\">Imagem</span>\n                 <img src={`/layout/images/${rowData.image}`} alt={rowData.image} className=\"shadow-2\" width=\"100\" />\n             </>\n         );\n     };\n"
                },
                {
                    "date": 1706143970003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -272,18 +272,18 @@\n \n     const priceBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <span className=\"p-column-title\">Price</span>\n+                <span className=\"p-column-title\">Preço</span>\n                 {formatCurrency(rowData.price as number)}\n             </>\n         );\n     };\n \n     const categoryBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <span className=\"p-column-title\">Category</span>\n+                <span className=\"p-column-title\">Categoria</span>\n                 {rowData.category}\n             </>\n         );\n     };\n"
                },
                {
                    "date": 1706143975942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -290,9 +290,9 @@\n \n     const ratingBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <span className=\"p-column-title\">Reviews</span>\n+                <span className=\"p-column-title\">Avaliação</span>\n                 <Rating value={rowData.rating} readOnly cancel={false} />\n             </>\n         );\n     };\n"
                },
                {
                    "date": 1706144003693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n \n     const actionBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <Button icon=\"pi pi-pencil\" rounded severity=\"success\" className=\"mr-2\" onClick={() => editProduct(rowData)} />\n+                <Button icon=\"pi pi-pencil\" alt=\"Editar\" rounded severity=\"success\" className=\"mr-2\" onClick={() => editProduct(rowData)} />\n                 <Button icon=\"pi pi-trash\" rounded severity=\"warning\" onClick={() => confirmDeleteProduct(rowData)} />\n             </>\n         );\n     };\n"
                },
                {
                    "date": 1706144032081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,10 +308,10 @@\n \n     const actionBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n-                <Button icon=\"pi pi-pencil\" alt=\"Editar\" rounded severity=\"success\" className=\"mr-2\" onClick={() => editProduct(rowData)} />\n-                <Button icon=\"pi pi-trash\" rounded severity=\"warning\" onClick={() => confirmDeleteProduct(rowData)} />\n+                <Button icon=\"pi pi-pencil\" tooltip=\"Editar\" rounded severity=\"success\" className=\"mr-2\" onClick={() => editProduct(rowData)} />\n+                <Button icon=\"pi pi-trash\" tooltip=\"Excluir\" rounded severity=\"warning\" onClick={() => confirmDeleteProduct(rowData)} />\n             </>\n         );\n     };\n \n"
                },
                {
                    "date": 1706144050570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,9 +319,9 @@\n         <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n             <h5 className=\"m-0\">Manage Products</h5>\n             <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                 <i className=\"pi pi-search\" />\n-                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.currentTarget.value)} placeholder=\"Search...\" />\n+                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.currentTarget.value)} placeholder=\"Pesquisar...\" />\n             </span>\n         </div>\n     );\n \n"
                },
                {
                    "date": 1706144062998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,10 +326,10 @@\n     );\n \n     const productDialogFooter = (\n         <>\n-            <Button label=\"Cancel\" icon=\"pi pi-times\" text onClick={hideDialog} />\n-            <Button label=\"Save\" icon=\"pi pi-check\" text onClick={saveProduct} />\n+            <Button label=\"Cancelar\" icon=\"pi pi-times\" text onClick={hideDialog} />\n+            <Button label=\"Salvar\" icon=\"pi pi-check\" text onClick={saveProduct} />\n         </>\n     );\n     const deleteProductDialogFooter = (\n         <>\n"
                },
                {
                    "date": 1706144070348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,10 +332,10 @@\n         </>\n     );\n     const deleteProductDialogFooter = (\n         <>\n-            <Button label=\"No\" icon=\"pi pi-times\" text onClick={hideDeleteProductDialog} />\n-            <Button label=\"Yes\" icon=\"pi pi-check\" text onClick={deleteProduct} />\n+            <Button label=\"Não\" icon=\"pi pi-times\" text onClick={hideDeleteProductDialog} />\n+            <Button label=\"Sim\" icon=\"pi pi-check\" text onClick={deleteProduct} />\n         </>\n     );\n     const deleteProductsDialogFooter = (\n         <>\n"
                },
                {
                    "date": 1706144107013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,10 +338,10 @@\n         </>\n     );\n     const deleteProductsDialogFooter = (\n         <>\n-            <Button label=\"No\" icon=\"pi pi-times\" text onClick={hideDeleteProductsDialog} />\n-            <Button label=\"Yes\" icon=\"pi pi-check\" text onClick={deleteSelectedProducts} />\n+            <Button label=\"Não\" icon=\"pi pi-times\" text onClick={hideDeleteProductsDialog} />\n+            <Button label=\"Sim\" icon=\"pi pi-check\" text onClick={deleteSelectedProducts} />\n         </>\n     );\n \n     return (\n@@ -363,9 +363,9 @@\n                         className=\"datatable-responsive\"\n                         paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                         currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\n                         globalFilter={globalFilter}\n-                        emptyMessage=\"No products found.\"\n+                        emptyMessage=\"Nenhum produto encontrado.\"\n                         header={header}\n                         responsiveLayout=\"scroll\"\n                     >\n                         <Column selectionMode=\"multiple\" headerStyle={{ width: '4rem' }}></Column>\n"
                },
                {
                    "date": 1706144117534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,9 +361,9 @@\n                         rows={10}\n                         rowsPerPageOptions={[5, 10, 25]}\n                         className=\"datatable-responsive\"\n                         paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n-                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\n+                        currentPageReportTemplate=\"Exibindo {first} to {last} of {totalRecords} products\"\n                         globalFilter={globalFilter}\n                         emptyMessage=\"Nenhum produto encontrado.\"\n                         header={header}\n                         responsiveLayout=\"scroll\"\n"
                },
                {
                    "date": 1706144135927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,9 +361,9 @@\n                         rows={10}\n                         rowsPerPageOptions={[5, 10, 25]}\n                         className=\"datatable-responsive\"\n                         paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n-                        currentPageReportTemplate=\"Exibindo {first} to {last} of {totalRecords} products\"\n+                        currentPageReportTemplate=\"Exibindo {first} to {last} of {totalRecords} produtos\"\n                         globalFilter={globalFilter}\n                         emptyMessage=\"Nenhum produto encontrado.\"\n                         header={header}\n                         responsiveLayout=\"scroll\"\n"
                },
                {
                    "date": 1706144143031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,9 +361,9 @@\n                         rows={10}\n                         rowsPerPageOptions={[5, 10, 25]}\n                         className=\"datatable-responsive\"\n                         paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n-                        currentPageReportTemplate=\"Exibindo {first} to {last} of {totalRecords} produtos\"\n+                        currentPageReportTemplate=\"Exibindo {first} de {last} de {totalRecords} produtos\"\n                         globalFilter={globalFilter}\n                         emptyMessage=\"Nenhum produto encontrado.\"\n                         header={header}\n                         responsiveLayout=\"scroll\"\n"
                },
                {
                    "date": 1706144161737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -368,9 +368,9 @@\n                         header={header}\n                         responsiveLayout=\"scroll\"\n                     >\n                         <Column selectionMode=\"multiple\" headerStyle={{ width: '4rem' }}></Column>\n-                        <Column field=\"code\" header=\"Code\" sortable body={codeBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n+                        <Column field=\"code\" header=\"Código\" sortable body={codeBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n                         <Column field=\"name\" header=\"Name\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n                         <Column header=\"Image\" body={imageBodyTemplate}></Column>\n                         <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\n                         <Column field=\"category\" header=\"Category\" sortable body={categoryBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n"
                },
                {
                    "date": 1706144171841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -369,10 +369,10 @@\n                         responsiveLayout=\"scroll\"\n                     >\n                         <Column selectionMode=\"multiple\" headerStyle={{ width: '4rem' }}></Column>\n                         <Column field=\"code\" header=\"Código\" sortable body={codeBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n-                        <Column field=\"name\" header=\"Name\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n-                        <Column header=\"Image\" body={imageBodyTemplate}></Column>\n+                        <Column field=\"name\" header=\"Nome\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n+                        <Column header=\"Imagem\" body={imageBodyTemplate}></Column>\n                         <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\n                         <Column field=\"category\" header=\"Category\" sortable body={categoryBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                         <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable></Column>\n                         <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable headerStyle={{ minWidth: '10rem' }}></Column>\n"
                },
                {
                    "date": 1706144180655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -371,10 +371,10 @@\n                         <Column selectionMode=\"multiple\" headerStyle={{ width: '4rem' }}></Column>\n                         <Column field=\"code\" header=\"Código\" sortable body={codeBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n                         <Column field=\"name\" header=\"Nome\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n                         <Column header=\"Imagem\" body={imageBodyTemplate}></Column>\n-                        <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\n-                        <Column field=\"category\" header=\"Category\" sortable body={categoryBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n+                        <Column field=\"price\" header=\"Preço\" body={priceBodyTemplate} sortable></Column>\n+                        <Column field=\"category\" header=\"Categoria\" sortable body={categoryBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                         <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable></Column>\n                         <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable headerStyle={{ minWidth: '10rem' }}></Column>\n                         <Column body={actionBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                     </DataTable>\n"
                },
                {
                    "date": 1706144186907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -373,9 +373,9 @@\n                         <Column field=\"name\" header=\"Nome\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n                         <Column header=\"Imagem\" body={imageBodyTemplate}></Column>\n                         <Column field=\"price\" header=\"Preço\" body={priceBodyTemplate} sortable></Column>\n                         <Column field=\"category\" header=\"Categoria\" sortable body={categoryBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n-                        <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable></Column>\n+                        <Column field=\"rating\" header=\"Avaliação\" body={ratingBodyTemplate} sortable></Column>\n                         <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable headerStyle={{ minWidth: '10rem' }}></Column>\n                         <Column body={actionBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                     </DataTable>\n \n"
                },
                {
                    "date": 1706144201707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -378,9 +378,9 @@\n                         <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable headerStyle={{ minWidth: '10rem' }}></Column>\n                         <Column body={actionBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                     </DataTable>\n \n-                    <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\n+                    <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Detalhes do Produto\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\n                         {product.image && <img src={`/demo/images/product/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n                         <div className=\"field\">\n                             <label htmlFor=\"name\">Name</label>\n                             <InputText\n"
                },
                {
                    "date": 1706144248984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,9 +379,9 @@\n                         <Column body={actionBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                     </DataTable>\n \n                     <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Detalhes do Produto\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\n-                        {product.image && <img src={`/demo/images/product/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n+                        {product.image && <img src={`/layout/images/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n                         <div className=\"field\">\n                             <label htmlFor=\"name\">Name</label>\n                             <InputText\n                                 id=\"name\"\n"
                },
                {
                    "date": 1706144261589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -381,9 +381,9 @@\n \n                     <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Detalhes do Produto\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\n                         {product.image && <img src={`/layout/images/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n                         <div className=\"field\">\n-                            <label htmlFor=\"name\">Name</label>\n+                            <label htmlFor=\"name\">Nome</label>\n                             <InputText\n                                 id=\"name\"\n                                 value={product.name}\n                                 onChange={(e) => onInputChange(e, 'name')}\n"
                },
                {
                    "date": 1706144273848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,9 +392,9 @@\n                                 className={classNames({\n                                     'p-invalid': submitted && !product.name\n                                 })}\n                             />\n-                            {submitted && !product.name && <small className=\"p-invalid\">Name is required.</small>}\n+                            {submitted && !product.name && <small className=\"p-invalid\">Nome é obrigatório.</small>}\n                         </div>\n                         <div className=\"field\">\n                             <label htmlFor=\"description\">Description</label>\n                             <InputTextarea id=\"description\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\n"
                },
                {
                    "date": 1706144280759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -395,9 +395,9 @@\n                             />\n                             {submitted && !product.name && <small className=\"p-invalid\">Nome é obrigatório.</small>}\n                         </div>\n                         <div className=\"field\">\n-                            <label htmlFor=\"description\">Description</label>\n+                            <label htmlFor=\"description\">Descrição</label>\n                             <InputTextarea id=\"description\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\n                         </div>\n \n                         <div className=\"field\">\n"
                },
                {
                    "date": 1706144306333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -403,9 +403,9 @@\n                         <div className=\"field\">\n                             <label className=\"mb-3\">Category</label>\n                             <div className=\"formgrid grid\">\n                                 <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\n+                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Livros\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\n                                     <label htmlFor=\"category1\">Accessories</label>\n                                 </div>\n                                 <div className=\"field-radiobutton col-6\">\n                                     <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\n"
                },
                {
                    "date": 1706144338643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -403,23 +403,15 @@\n                         <div className=\"field\">\n                             <label className=\"mb-3\">Category</label>\n                             <div className=\"formgrid grid\">\n                                 <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Livros\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\n+                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Livros\" onChange={onCategoryChange} checked={product.category === 'Livros'} />\n                                     <label htmlFor=\"category1\">Accessories</label>\n                                 </div>\n                                 <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\n+                                    <RadioButton inputId=\"category2\" name=\"category\" value=\"Artes\" onChange={onCategoryChange} checked={product.category === 'Artes'} />\n                                     <label htmlFor=\"category2\">Clothing</label>\n                                 </div>\n-                                <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\n-                                    <label htmlFor=\"category3\">Electronics</label>\n-                                </div>\n-                                <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\n-                                    <label htmlFor=\"category4\">Fitness</label>\n-                                </div>\n                             </div>\n                         </div>\n \n                         <div className=\"formgrid grid\">\n"
                },
                {
                    "date": 1706144357498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -404,13 +404,13 @@\n                             <label className=\"mb-3\">Category</label>\n                             <div className=\"formgrid grid\">\n                                 <div className=\"field-radiobutton col-6\">\n                                     <RadioButton inputId=\"category1\" name=\"category\" value=\"Livros\" onChange={onCategoryChange} checked={product.category === 'Livros'} />\n-                                    <label htmlFor=\"category1\">Accessories</label>\n+                                    <label htmlFor=\"category1\">Livros</label>\n                                 </div>\n                                 <div className=\"field-radiobutton col-6\">\n                                     <RadioButton inputId=\"category2\" name=\"category\" value=\"Artes\" onChange={onCategoryChange} checked={product.category === 'Artes'} />\n-                                    <label htmlFor=\"category2\">Clothing</label>\n+                                    <label htmlFor=\"category2\">Artes</label>\n                                 </div>\n                             </div>\n                         </div>\n \n"
                },
                {
                    "date": 1706144388155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -415,9 +415,9 @@\n                         </div>\n \n                         <div className=\"formgrid grid\">\n                             <div className=\"field col\">\n-                                <label htmlFor=\"price\">Price</label>\n+                                <label htmlFor=\"price\">Preço</label>\n                                 <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n                             </div>\n                             <div className=\"field col\">\n                                 <label htmlFor=\"quantity\">Quantity</label>\n"
                },
                {
                    "date": 1706144396602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -419,9 +419,9 @@\n                                 <label htmlFor=\"price\">Preço</label>\n                                 <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n                             </div>\n                             <div className=\"field col\">\n-                                <label htmlFor=\"quantity\">Quantity</label>\n+                                <label htmlFor=\"quantity\">Quantidade</label>\n                                 <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} />\n                             </div>\n                         </div>\n                     </Dialog>\n"
                },
                {
                    "date": 1706144421397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,9 +430,9 @@\n                         <div className=\"flex align-items-center justify-content-center\">\n                             <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                             {product && (\n                                 <span>\n-                                    Are you sure you want to delete <b>{product.name}</b>?\n+                                    Tem certeza que deseja excluir <b>{product.name}</b>?\n                                 </span>\n                             )}\n                         </div>\n                     </Dialog>\n"
                },
                {
                    "date": 1706144443001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -439,9 +439,9 @@\n \n                     <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\n                         <div className=\"flex align-items-center justify-content-center\">\n                             <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n-                            {product && <span>Are you sure you want to delete the selected products?</span>}\n+                            {product && <span>Você realmente deseja excluir o produto?</span>}\n                         </div>\n                     </Dialog>\n                 </div>\n             </div>\n"
                },
                {
                    "date": 1706144483046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -416,9 +416,9 @@\n \n                         <div className=\"formgrid grid\">\n                             <div className=\"field col\">\n                                 <label htmlFor=\"price\">Preço</label>\n-                                <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n+                                <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"BRL\" locale=\"en-US\" />\n                             </div>\n                             <div className=\"field col\">\n                                 <label htmlFor=\"quantity\">Quantidade</label>\n                                 <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} />\n"
                },
                {
                    "date": 1706144520503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -416,9 +416,9 @@\n \n                         <div className=\"formgrid grid\">\n                             <div className=\"field col\">\n                                 <label htmlFor=\"price\">Preço</label>\n-                                <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"BRL\" locale=\"en-US\" />\n+                                <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"BRL\" locale=\"pt-BR\" />\n                             </div>\n                             <div className=\"field col\">\n                                 <label htmlFor=\"quantity\">Quantidade</label>\n                                 <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} />\n"
                },
                {
                    "date": 1706144585488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n                     life: 3000\n                 });\n             } else {\n                 _product.id = createId();\n-                _product.image = 'product-placeholder.svg';\n+                _product.image = 'logo-white.svg';\n                 _products.push(_product);\n                 toast.current?.show({\n                     severity: 'success',\n                     summary: 'Sucesso',\n"
                },
                {
                    "date": 1706144678844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,8 +127,9 @@\n                     summary: 'Sucesso',\n                     detail: 'Produto Criado',\n                     life: 3000\n                 });\n+                console.log(_products)\n             }\n \n             setProducts(_products as any);\n             setProductDialog(false);\n@@ -176,8 +177,9 @@\n         let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n         for (let i = 0; i < 5; i++) {\n             id += chars.charAt(Math.floor(Math.random() * chars.length));\n         }\n+\n         return id;\n     };\n \n     const exportCSV = () => {\n"
                },
                {
                    "date": 1706144821231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,18 +118,18 @@\n                     detail: 'Produto atualizado',\n                     life: 3000\n                 });\n             } else {\n-                _product.id = createId();\n+                _product.id = Math.floor(Math.random()).toFixed(0)\n+                _product.code = createId();\n                 _product.image = 'logo-white.svg';\n                 _products.push(_product);\n                 toast.current?.show({\n                     severity: 'success',\n                     summary: 'Sucesso',\n                     detail: 'Produto Criado',\n                     life: 3000\n                 });\n-                console.log(_products)\n             }\n \n             setProducts(_products as any);\n             setProductDialog(false);\n"
                },
                {
                    "date": 1706144905716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import { classNames } from 'primereact/utils';\n import React, { useEffect, useRef, useState } from 'react';\n import { Demo } from '@/types';\n import { ProductData } from \"@/types/data\";\n-//import { ProductService } from '../../../../demo/service/ProductService';\n+//OLDD import { ProductService } from '../../../../demo/service/ProductService';\n \n /* @todo Used 'as any' for types here. Will fix in next version due to onSelectionChange event type issue. */\n const Crud = () => {\n     let emptyProduct: Demo.Product = {\n"
                },
                {
                    "date": 1706144912850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n import { Toolbar } from 'primereact/toolbar';\n import { classNames } from 'primereact/utils';\n import React, { useEffect, useRef, useState } from 'react';\n import { Demo } from '@/types';\n-import { ProductData } from \"@/types/data\";\n //OLDD import { ProductService } from '../../../../demo/service/ProductService';\n \n /* @todo Used 'as any' for types here. Will fix in next version due to onSelectionChange event type issue. */\n const Crud = () => {\n"
                },
                {
                    "date": 1706145176859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -265,9 +265,9 @@\n     const imageBodyTemplate = (rowData: Demo.Product) => {\n         return (\n             <>\n                 <span className=\"p-column-title\">Imagem</span>\n-                <img src={`/layout/images/${rowData.image}`} alt={rowData.image} className=\"shadow-2\" width=\"100\" />\n+                <img src={`/product/${rowData.image}`} alt={rowData.image} className=\"shadow-2\" width=\"100\" />\n             </>\n         );\n     };\n \n"
                },
                {
                    "date": 1706145188555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -380,9 +380,9 @@\n                         <Column body={actionBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                     </DataTable>\n \n                     <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Detalhes do Produto\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\n-                        {product.image && <img src={`/layout/images/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n+                        {product.image && <img src={`/product/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n                         <div className=\"field\">\n                             <label htmlFor=\"name\">Nome</label>\n                             <InputText\n                                 id=\"name\"\n"
                },
                {
                    "date": 1706145200570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"PrimeBlocks\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"banner-primeblocks.png\",\n+                \"image\": \"headphones.png\",\n                 \"price\": 65,\n                 \"date\": \"09/13/2022\",\n                 \"category\": \"Livros\",\n                 \"quantity\": 24,\n"
                },
                {
                    "date": 1706145206912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n                 \"id\": \"1001\",\n                 \"code\": \"nvklal433\",\n                 \"name\": \"Logo\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"logo-dark.svg\",\n+                \"image\": \"gaming-set.svg\",\n                 \"price\": 72,\n                 \"date\": \"09/12/2022\",\n                 \"category\": \"Artes\",\n                 \"quantity\": 61,\n"
                },
                {
                    "date": 1706145218043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n                 \"description\": \"Product Description\",\n                 \"image\": \"headphones.png\",\n                 \"price\": 65,\n                 \"date\": \"09/13/2022\",\n-                \"category\": \"Livros\",\n+                \"category\": \"Fone\",\n                 \"quantity\": 24,\n                 \"inventoryStatus\": \"INSTOCK\",\n                 \"rating\": 5\n             },\n@@ -65,9 +65,9 @@\n                 \"description\": \"Product Description\",\n                 \"image\": \"gaming-set.svg\",\n                 \"price\": 72,\n                 \"date\": \"09/12/2022\",\n-                \"category\": \"Artes\",\n+                \"category\": \"Game\",\n                 \"quantity\": 61,\n                 \"inventoryStatus\": \"OUTOFSTOCK\",\n                 \"rating\": 4\n             }];\n"
                },
                {
                    "date": 1706145235336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -404,9 +404,9 @@\n                         <div className=\"field\">\n                             <label className=\"mb-3\">Category</label>\n                             <div className=\"formgrid grid\">\n                                 <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Livros\" onChange={onCategoryChange} checked={product.category === 'Livros'} />\n+                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Fone\" onChange={onCategoryChange} checked={product.category === 'Livros'} />\n                                     <label htmlFor=\"category1\">Livros</label>\n                                 </div>\n                                 <div className=\"field-radiobutton col-6\">\n                                     <RadioButton inputId=\"category2\" name=\"category\" value=\"Artes\" onChange={onCategoryChange} checked={product.category === 'Artes'} />\n"
                },
                {
                    "date": 1706145245583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -404,13 +404,13 @@\n                         <div className=\"field\">\n                             <label className=\"mb-3\">Category</label>\n                             <div className=\"formgrid grid\">\n                                 <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Fone\" onChange={onCategoryChange} checked={product.category === 'Livros'} />\n+                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Fone\" onChange={onCategoryChange} checked={product.category === 'Fone'} />\n                                     <label htmlFor=\"category1\">Livros</label>\n                                 </div>\n                                 <div className=\"field-radiobutton col-6\">\n-                                    <RadioButton inputId=\"category2\" name=\"category\" value=\"Artes\" onChange={onCategoryChange} checked={product.category === 'Artes'} />\n+                                    <RadioButton inputId=\"category2\" name=\"category\" value=\"Game\" onChange={onCategoryChange} checked={product.category === 'Game'} />\n                                     <label htmlFor=\"category2\">Artes</label>\n                                 </div>\n                             </div>\n                         </div>\n"
                },
                {
                    "date": 1706145317135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n                 });\n             } else {\n                 _product.id = Math.floor(Math.random()).toFixed(0)\n                 _product.code = createId();\n-                _product.image = 'logo-white.svg';\n+                _product.image = 'shoes.jpg';\n                 _products.push(_product);\n                 toast.current?.show({\n                     severity: 'success',\n                     summary: 'Sucesso',\n"
                },
                {
                    "date": 1706145385688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n                 \"id\": \"1000\",\n                 \"code\": \"f230fh0g3\",\n                 \"name\": \"PrimeBlocks\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"headphones.png\",\n+                \"image\": \"headphones.jpg\",\n                 \"price\": 65,\n                 \"date\": \"09/13/2022\",\n                 \"category\": \"Fone\",\n                 \"quantity\": 24,\n@@ -62,9 +62,9 @@\n                 \"id\": \"1001\",\n                 \"code\": \"nvklal433\",\n                 \"name\": \"Logo\",\n                 \"description\": \"Product Description\",\n-                \"image\": \"gaming-set.svg\",\n+                \"image\": \"gaming-set.jpg\",\n                 \"price\": 72,\n                 \"date\": \"09/12/2022\",\n                 \"category\": \"Game\",\n                 \"quantity\": 61,\n"
                },
                {
                    "date": 1706145459619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -405,9 +405,9 @@\n                             <label className=\"mb-3\">Category</label>\n                             <div className=\"formgrid grid\">\n                                 <div className=\"field-radiobutton col-6\">\n                                     <RadioButton inputId=\"category1\" name=\"category\" value=\"Fone\" onChange={onCategoryChange} checked={product.category === 'Fone'} />\n-                                    <label htmlFor=\"category1\">Livros</label>\n+                                    <label htmlFor=\"category1\">Fone</label>\n                                 </div>\n                                 <div className=\"field-radiobutton col-6\">\n                                     <RadioButton inputId=\"category2\" name=\"category\" value=\"Game\" onChange={onCategoryChange} checked={product.category === 'Game'} />\n                                     <label htmlFor=\"category2\">Artes</label>\n"
                }
            ],
            "date": 1706141055755,
            "name": "Commit-0",
            "content": "/* eslint-disable @next/next/no-img-element */\n'use client';\nimport { Button } from 'primereact/button';\nimport { Column } from 'primereact/column';\nimport { DataTable } from 'primereact/datatable';\nimport { Dialog } from 'primereact/dialog';\nimport { FileUpload } from 'primereact/fileupload';\nimport { InputNumber, InputNumberValueChangeEvent } from 'primereact/inputnumber';\nimport { InputText } from 'primereact/inputtext';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { RadioButton, RadioButtonChangeEvent } from 'primereact/radiobutton';\nimport { Rating } from 'primereact/rating';\nimport { Toast } from 'primereact/toast';\nimport { Toolbar } from 'primereact/toolbar';\nimport { classNames } from 'primereact/utils';\nimport React, { useEffect, useRef, useState } from 'react';\n//import { ProductService } from '../../../../demo/service/ProductService';\nimport { Demo } from '@/types';\n\n/* @todo Used 'as any' for types here. Will fix in next version due to onSelectionChange event type issue. */\nconst Crud = () => {\n    let emptyProduct: Demo.Product = {\n        id: '',\n        name: '',\n        image: '',\n        description: '',\n        category: '',\n        price: 0,\n        quantity: 0,\n        rating: 0,\n        inventoryStatus: 'INSTOCK'\n    };\n\n    const [products, setProducts] = useState(null);\n    const [productDialog, setProductDialog] = useState(false);\n    const [deleteProductDialog, setDeleteProductDialog] = useState(false);\n    const [deleteProductsDialog, setDeleteProductsDialog] = useState(false);\n    const [product, setProduct] = useState<Demo.Product>(emptyProduct);\n    const [selectedProducts, setSelectedProducts] = useState(null);\n    const [submitted, setSubmitted] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState('');\n    const toast = useRef<Toast>(null);\n    const dt = useRef<DataTable<any>>(null);\n\n    useEffect(() => {\n       // ProductService.getProducts().then((data) => setProducts(data as any));\n    }, []);\n\n    const formatCurrency = (value: number) => {\n        return value.toLocaleString('en-US', {\n            style: 'currency',\n            currency: 'USD'\n        });\n    };\n\n    const openNew = () => {\n        setProduct(emptyProduct);\n        setSubmitted(false);\n        setProductDialog(true);\n    };\n\n    const hideDialog = () => {\n        setSubmitted(false);\n        setProductDialog(false);\n    };\n\n    const hideDeleteProductDialog = () => {\n        setDeleteProductDialog(false);\n    };\n\n    const hideDeleteProductsDialog = () => {\n        setDeleteProductsDialog(false);\n    };\n\n    const saveProduct = () => {\n        setSubmitted(true);\n\n        if (product.name.trim()) {\n            let _products = [...(products as any)];\n            let _product = { ...product };\n            if (product.id) {\n                const index = findIndexById(product.id);\n\n                _products[index] = _product;\n                toast.current?.show({\n                    severity: 'success',\n                    summary: 'Successful',\n                    detail: 'Product Updated',\n                    life: 3000\n                });\n            } else {\n                _product.id = createId();\n                _product.image = 'product-placeholder.svg';\n                _products.push(_product);\n                toast.current?.show({\n                    severity: 'success',\n                    summary: 'Successful',\n                    detail: 'Product Created',\n                    life: 3000\n                });\n            }\n\n            setProducts(_products as any);\n            setProductDialog(false);\n            setProduct(emptyProduct);\n        }\n    };\n\n    const editProduct = (product: Demo.Product) => {\n        setProduct({ ...product });\n        setProductDialog(true);\n    };\n\n    const confirmDeleteProduct = (product: Demo.Product) => {\n        setProduct(product);\n        setDeleteProductDialog(true);\n    };\n\n    const deleteProduct = () => {\n        let _products = (products as any)?.filter((val: any) => val.id !== product.id);\n        setProducts(_products);\n        setDeleteProductDialog(false);\n        setProduct(emptyProduct);\n        toast.current?.show({\n            severity: 'success',\n            summary: 'Successful',\n            detail: 'Product Deleted',\n            life: 3000\n        });\n    };\n\n    const findIndexById = (id: string) => {\n        let index = -1;\n        for (let i = 0; i < (products as any)?.length; i++) {\n            if ((products as any)[i].id === id) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    };\n\n    const createId = () => {\n        let id = '';\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < 5; i++) {\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return id;\n    };\n\n    const exportCSV = () => {\n        dt.current?.exportCSV();\n    };\n\n    const confirmDeleteSelected = () => {\n        setDeleteProductsDialog(true);\n    };\n\n    const deleteSelectedProducts = () => {\n        let _products = (products as any)?.filter((val: any) => !(selectedProducts as any)?.includes(val));\n        setProducts(_products);\n        setDeleteProductsDialog(false);\n        setSelectedProducts(null);\n        toast.current?.show({\n            severity: 'success',\n            summary: 'Successful',\n            detail: 'Products Deleted',\n            life: 3000\n        });\n    };\n\n    const onCategoryChange = (e: RadioButtonChangeEvent) => {\n        let _product = { ...product };\n        _product['category'] = e.value;\n        setProduct(_product);\n    };\n\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, name: string) => {\n        const val = (e.target && e.target.value) || '';\n        let _product = { ...product };\n        _product[`${name}`] = val;\n\n        setProduct(_product);\n    };\n\n    const onInputNumberChange = (e: InputNumberValueChangeEvent, name: string) => {\n        const val = e.value || 0;\n        let _product = { ...product };\n        _product[`${name}`] = val;\n\n        setProduct(_product);\n    };\n\n    const leftToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <div className=\"my-2\">\n                    <Button label=\"New\" icon=\"pi pi-plus\" severity=\"success\" className=\" mr-2\" onClick={openNew} />\n                    <Button label=\"Delete\" icon=\"pi pi-trash\" severity=\"danger\" onClick={confirmDeleteSelected} disabled={!selectedProducts || !(selectedProducts as any).length} />\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    const rightToolbarTemplate = () => {\n        return (\n            <React.Fragment>\n                <FileUpload mode=\"basic\" accept=\"image/*\" maxFileSize={1000000} chooseLabel=\"Import\" className=\"mr-2 inline-block\" />\n                <Button label=\"Export\" icon=\"pi pi-upload\" severity=\"help\" onClick={exportCSV} />\n            </React.Fragment>\n        );\n    };\n\n    const codeBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Code</span>\n                {rowData.code}\n            </>\n        );\n    };\n\n    const nameBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Name</span>\n                {rowData.name}\n            </>\n        );\n    };\n\n    const imageBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Image</span>\n                <img src={`/demo/images/product/${rowData.image}`} alt={rowData.image} className=\"shadow-2\" width=\"100\" />\n            </>\n        );\n    };\n\n    const priceBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Price</span>\n                {formatCurrency(rowData.price as number)}\n            </>\n        );\n    };\n\n    const categoryBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Category</span>\n                {rowData.category}\n            </>\n        );\n    };\n\n    const ratingBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Reviews</span>\n                <Rating value={rowData.rating} readOnly cancel={false} />\n            </>\n        );\n    };\n\n    const statusBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <span className=\"p-column-title\">Status</span>\n                <span className={`product-badge status-${rowData.inventoryStatus?.toLowerCase()}`}>{rowData.inventoryStatus}</span>\n            </>\n        );\n    };\n\n    const actionBodyTemplate = (rowData: Demo.Product) => {\n        return (\n            <>\n                <Button icon=\"pi pi-pencil\" rounded severity=\"success\" className=\"mr-2\" onClick={() => editProduct(rowData)} />\n                <Button icon=\"pi pi-trash\" rounded severity=\"warning\" onClick={() => confirmDeleteProduct(rowData)} />\n            </>\n        );\n    };\n\n    const header = (\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n            <h5 className=\"m-0\">Manage Products</h5>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n                <i className=\"pi pi-search\" />\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.currentTarget.value)} placeholder=\"Search...\" />\n            </span>\n        </div>\n    );\n\n    const productDialogFooter = (\n        <>\n            <Button label=\"Cancel\" icon=\"pi pi-times\" text onClick={hideDialog} />\n            <Button label=\"Save\" icon=\"pi pi-check\" text onClick={saveProduct} />\n        </>\n    );\n    const deleteProductDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" text onClick={hideDeleteProductDialog} />\n            <Button label=\"Yes\" icon=\"pi pi-check\" text onClick={deleteProduct} />\n        </>\n    );\n    const deleteProductsDialogFooter = (\n        <>\n            <Button label=\"No\" icon=\"pi pi-times\" text onClick={hideDeleteProductsDialog} />\n            <Button label=\"Yes\" icon=\"pi pi-check\" text onClick={deleteSelectedProducts} />\n        </>\n    );\n\n    return (\n        <div className=\"grid crud-demo\">\n            <div className=\"col-12\">\n                <div className=\"card\">\n                    <Toast ref={toast} />\n                    <Toolbar className=\"mb-4\" left={leftToolbarTemplate} right={rightToolbarTemplate}></Toolbar>\n\n                    <DataTable\n                        ref={dt}\n                        value={products}\n                        selection={selectedProducts}\n                        onSelectionChange={(e) => setSelectedProducts(e.value as any)}\n                        dataKey=\"id\"\n                        paginator\n                        rows={10}\n                        rowsPerPageOptions={[5, 10, 25]}\n                        className=\"datatable-responsive\"\n                        paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n                        currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\"\n                        globalFilter={globalFilter}\n                        emptyMessage=\"No products found.\"\n                        header={header}\n                        responsiveLayout=\"scroll\"\n                    >\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '4rem' }}></Column>\n                        <Column field=\"code\" header=\"Code\" sortable body={codeBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n                        <Column field=\"name\" header=\"Name\" sortable body={nameBodyTemplate} headerStyle={{ minWidth: '15rem' }}></Column>\n                        <Column header=\"Image\" body={imageBodyTemplate}></Column>\n                        <Column field=\"price\" header=\"Price\" body={priceBodyTemplate} sortable></Column>\n                        <Column field=\"category\" header=\"Category\" sortable body={categoryBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                        <Column field=\"rating\" header=\"Reviews\" body={ratingBodyTemplate} sortable></Column>\n                        <Column field=\"inventoryStatus\" header=\"Status\" body={statusBodyTemplate} sortable headerStyle={{ minWidth: '10rem' }}></Column>\n                        <Column body={actionBodyTemplate} headerStyle={{ minWidth: '10rem' }}></Column>\n                    </DataTable>\n\n                    <Dialog visible={productDialog} style={{ width: '450px' }} header=\"Product Details\" modal className=\"p-fluid\" footer={productDialogFooter} onHide={hideDialog}>\n                        {product.image && <img src={`/demo/images/product/${product.image}`} alt={product.image} width=\"150\" className=\"mt-0 mx-auto mb-5 block shadow-2\" />}\n                        <div className=\"field\">\n                            <label htmlFor=\"name\">Name</label>\n                            <InputText\n                                id=\"name\"\n                                value={product.name}\n                                onChange={(e) => onInputChange(e, 'name')}\n                                required\n                                autoFocus\n                                className={classNames({\n                                    'p-invalid': submitted && !product.name\n                                })}\n                            />\n                            {submitted && !product.name && <small className=\"p-invalid\">Name is required.</small>}\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"description\">Description</label>\n                            <InputTextarea id=\"description\" value={product.description} onChange={(e) => onInputChange(e, 'description')} required rows={3} cols={20} />\n                        </div>\n\n                        <div className=\"field\">\n                            <label className=\"mb-3\">Category</label>\n                            <div className=\"formgrid grid\">\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category1\" name=\"category\" value=\"Accessories\" onChange={onCategoryChange} checked={product.category === 'Accessories'} />\n                                    <label htmlFor=\"category1\">Accessories</label>\n                                </div>\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category2\" name=\"category\" value=\"Clothing\" onChange={onCategoryChange} checked={product.category === 'Clothing'} />\n                                    <label htmlFor=\"category2\">Clothing</label>\n                                </div>\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category3\" name=\"category\" value=\"Electronics\" onChange={onCategoryChange} checked={product.category === 'Electronics'} />\n                                    <label htmlFor=\"category3\">Electronics</label>\n                                </div>\n                                <div className=\"field-radiobutton col-6\">\n                                    <RadioButton inputId=\"category4\" name=\"category\" value=\"Fitness\" onChange={onCategoryChange} checked={product.category === 'Fitness'} />\n                                    <label htmlFor=\"category4\">Fitness</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"formgrid grid\">\n                            <div className=\"field col\">\n                                <label htmlFor=\"price\">Price</label>\n                                <InputNumber id=\"price\" value={product.price} onValueChange={(e) => onInputNumberChange(e, 'price')} mode=\"currency\" currency=\"USD\" locale=\"en-US\" />\n                            </div>\n                            <div className=\"field col\">\n                                <label htmlFor=\"quantity\">Quantity</label>\n                                <InputNumber id=\"quantity\" value={product.quantity} onValueChange={(e) => onInputNumberChange(e, 'quantity')} />\n                            </div>\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteProductDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductDialogFooter} onHide={hideDeleteProductDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {product && (\n                                <span>\n                                    Are you sure you want to delete <b>{product.name}</b>?\n                                </span>\n                            )}\n                        </div>\n                    </Dialog>\n\n                    <Dialog visible={deleteProductsDialog} style={{ width: '450px' }} header=\"Confirm\" modal footer={deleteProductsDialogFooter} onHide={hideDeleteProductsDialog}>\n                        <div className=\"flex align-items-center justify-content-center\">\n                            <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\n                            {product && <span>Are you sure you want to delete the selected products?</span>}\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Crud;\n"
        }
    ]
}